{
  "contractName": "ZombieAttack",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "feedOnKitty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "dna",
          "type": "uint256"
        },
        {
          "name": "level",
          "type": "uint32"
        },
        {
          "name": "readyTime",
          "type": "uint32"
        },
        {
          "name": "winCount",
          "type": "uint16"
        },
        {
          "name": "lossCount",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_zombieOwner",
          "type": "address"
        }
      ],
      "name": "getZombiesByOwner",
      "outputs": [
        {
          "name": "_zombies",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setKittyContractAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "name": "_newDna",
          "type": "uint256"
        }
      ],
      "name": "changeDna",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomZombie",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setLevelUpFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "attack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_zombieId\",\"type\":\"uint256\"}],\"name\":\"levelUp\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"feedOnKitty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"dna\",\"type\":\"uint256\"},{\"name\":\"level\",\"type\":\"uint32\"},{\"name\":\"readyTime\",\"type\":\"uint32\"},{\"name\":\"winCount\",\"type\":\"uint16\"},{\"name\":\"lossCount\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_zombieOwner\",\"type\":\"address\"}],\"name\":\"getZombiesByOwner\",\"outputs\":[{\"name\":\"_zombies\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKittyContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"name\":\"_newDna\",\"type\":\"uint256\"}],\"name\":\"changeDna\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setLevelUpFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"name\":\"_targetId\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/CryptoZombies/contracts/ZombieAttack.sol\":\"ZombieAttack\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/CryptoZombies/contracts/SafeMath.sol\":{\"keccak256\":\"0x7160efb0db22660e475d82675bd52710c9919f4976a866eaf1bf2f6c5cc6423c\",\"urls\":[\"bzzr://124094ef467cf15f8a6362072fdb9979b6f444207838e92d90fccb639c7ef66c\"]},\"/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/CryptoZombies/contracts/ZombieAttack.sol\":{\"keccak256\":\"0xcf5206dd1791dff1aa59398d8913a6c7d406d14b37302b95fad7e5d30462fcf0\",\"urls\":[\"bzzr://94c4bc0073a629f1f995807723f3f6bcda231679076265d68750c5c2e5040de8\"]},\"/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/CryptoZombies/contracts/ZombieFactory.sol\":{\"keccak256\":\"0x98faab6018e6fde523cf84f3ab74d4e9758767497ba56ecf2f3b4e989e3cb6cf\",\"urls\":[\"bzzr://83a51937114b9c2b8cdedab7f130fe4d27b0e7bba4a9ca31562079a89f037023\"]},\"/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/CryptoZombies/contracts/ZombieFeeding.sol\":{\"keccak256\":\"0x47e1592e9a50987ede34f688cb9ac5e297a6bf2979ba6125beba2ee88a45667d\",\"urls\":[\"bzzr://48f86a2de765e8869bb298798fbca47562e996fe6a3ee91aba6937e074ea7081\"]},\"/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/CryptoZombies/contracts/ZombieHelper.sol\":{\"keccak256\":\"0xecd8137feae20a2be6de8e942d9196437cf6464f8efd956186feb33b8450580e\",\"urls\":[\"bzzr://ce6716159f5aba9e51db712dace0bd2a211b55bbe579b63b9edb2b3e88c30915\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzzr://ab46c9368bc3abdded5eb85858304518c8a0291060ab42087075d759dbf3925f\"]}},\"version\":1}",
  "bytecode": "0x60806040526010600155600154600a0a600255620151806003556000600a556046600b55600061003c6100df640100000000026401000000009004565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100e7565b600033905090565b6124f0806100f66000396000f3fe6080604052600436106100e0576000357c0100000000000000000000000000000000000000000000000000000000900480630ce90ec2146100e557806317a7f4cc146101135780632052465e146101585780633ccfd60b146102575780634412e1041461026e578063528b7b8f146103145780635f4623f11461038f5780635faf2880146103e0578063715018a6146104255780637bff0a011461043c5780638da5cb5b146105045780638f32d59b1461055b578063c39cbef11461058a578063ccf670f81461061a578063e1fa763814610655578063f2fde38b1461069a575b600080fd5b610111600480360360208110156100fb57600080fd5b81019080803590602001909291905050506106eb565b005b34801561011f57600080fd5b506101566004803603604081101561013657600080fd5b8101908080359060200190929190803590602001909291905050506107b3565b005b34801561016457600080fd5b506101916004803603602081101561017b57600080fd5b810190808035906020019092919050505061095a565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156102175780820151818401526020810190506101fc565b50505050905090810190601f1680156102445780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561026357600080fd5b5061026c610a79565b005b34801561027a57600080fd5b506102bd6004803603602081101561029157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b62565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103005780820151818401526020810190506102e5565b505050509050019250505060405180910390f35b34801561032057600080fd5b5061034d6004803603602081101561033757600080fd5b8101908080359060200190929190505050610ca1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039b57600080fd5b506103de600480360360208110156103b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cd4565b005b3480156103ec57600080fd5b506104236004803603604081101561040357600080fd5b810190808035906020019092919080359060200190929190505050610d94565b005b34801561043157600080fd5b5061043a610f05565b005b34801561044857600080fd5b506105026004803603602081101561045f57600080fd5b810190808035906020019064010000000081111561047c57600080fd5b82018360208201111561048e57600080fd5b803590602001918460018302840111640100000000831117156104b057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611040565b005b34801561051057600080fd5b5061051961105b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561056757600080fd5b50610570611084565b604051808215151515815260200191505060405180910390f35b34801561059657600080fd5b50610618600480360360408110156105ad57600080fd5b8101908080359060200190929190803590602001906401000000008111156105d457600080fd5b8201836020820111156105e657600080fd5b8035906020019184600183028401116401000000008311171561060857600080fd5b90919293919293905050506110e2565b005b34801561062657600080fd5b506106536004803603602081101561063d57600080fd5b810190808035906020019092919050505061125f565b005b34801561066157600080fd5b506106986004803603604081101561067857600080fd5b8101908080359060200190929190803590602001909291905050506112e5565b005b3480156106a657600080fd5b506106e9600480360360208110156106bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611598565b005b6009543410151515610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f46656520746f6f206c6f7721210000000000000000000000000000000000000081525060200191505060405180910390fd5b6107af600160048381548110151561077957fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1661162090919063ffffffff16565b5050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506101406040518083038186803b15801561084557600080fd5b505afa158015610859573d6000803e3d6000fd5b505050506040513d61014081101561087057600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061095583826040805190810160405280600581526020017f6b697474790000000000000000000000000000000000000000000000000000008152506116aa565b505050565b60048181548110151561096957fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a155780601f106109ea57610100808354040283529160200191610a15565b820191906000526020600020905b8154815290600101906020018083116109f857829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b610a81611084565b1515610af5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000610aff61105b565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610b5e573d6000803e3d6000fd5b5050565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610bd35781602001602082028038833980820191505090505b509050600080905060008090505b60048054905081111515610c96578473ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c8957808383815181101515610c6557fe5b9060200190602002018181525050610c8760018361162090919063ffffffff16565b505b8080600101915050610be1565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cdc611084565b1515610d50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b813373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610e91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f54686973207a6f6d62696520646f65736e27742062656c6f6e6720746f20796f81526020017f752121000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60148381600482815481101515610ea457fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1610151515610ed957600080fd5b83600486815481101515610ee957fe5b9060005260206000209060030201600101819055505050505050565b610f0d611084565b1515610f81576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061104b826119d6565b90506110578282611a6b565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110c6611dd9565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b823373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156111df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f54686973207a6f6d62696520646f65736e27742062656c6f6e6720746f20796f81526020017f752121000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600284816004828154811015156111f257fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015151561122757600080fd5b848460048881548110151561123857fe5b9060005260206000209060030201600001919061125692919061239f565b50505050505050565b611267611084565b15156112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8060098190555050565b813373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156113e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f54686973207a6f6d62696520646f65736e27742062656c6f6e6720746f20796f81526020017f752121000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60006004848154811015156113f357fe5b90600052602060002090600302019050600060048481548110151561141457fe5b9060005260206000209060030201905060006114306064611de1565b9050600b54811115156115305761146760018460020160089054906101000a900461ffff1661ffff1661162090919063ffffffff16565b5061149660018460020160009054906101000a900463ffffffff1663ffffffff1661162090919063ffffffff16565b506114c1600183600201600a9054906101000a900461ffff1661ffff1661162090919063ffffffff16565b506115068683600101546040805190810160405280600681526020017f5a6f6d62696500000000000000000000000000000000000000000000000000008152506116aa565b61152b60048781548110151561151857fe5b9060005260206000209060030201611e86565b611590565b61155a60018360020160089054906101000a900461ffff1661ffff1661162090919063ffffffff16565b50611585600184600201600a9054906101000a900461ffff1661ffff1661162090919063ffffffff16565b5061158f83611e86565b5b505050505050565b6115a0611084565b1515611614576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61161d81611ec0565b50565b60008082840190508381101515156116a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b823373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156117a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f54686973207a6f6d62696520646f65736e27742062656c6f6e6720746f20796f81526020017f752121000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60006004858154811015156117b857fe5b906000526020600020906003020190506117d181612049565b1515611845576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f546865207a6f6d626965206973206e6f7420726561647900000000000000000081525060200191505060405180910390fd5b61185a6002548561207090919063ffffffff16565b93506000611888600261187a87856001015461162090919063ffffffff16565b6120ba90919063ffffffff16565b905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b60208310151561190a57805182526020820191506020810190506020830392506118e5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561198657611984606361197661196760648561207090919063ffffffff16565b8461210490919063ffffffff16565b61162090919063ffffffff16565b505b6119c56040805190810160405280600c81526020017f6e65776c7943726561746564000000000000000000000000000000000000000081525082611a6b565b6119ce82611e86565b505050505050565b6000611a64600254836040516020018082805190602001908083835b602083101515611a1757805182526020820191506020810190506020830392506119f2565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206001900461207090919063ffffffff16565b9050919050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515611b48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f547279696e6720746f20637265617465207a6f6d626965206d6f72652074686181526020017f6e206f6e6365212100000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60006001600460c060405190810160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff16815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000019080519060200190611bde92919061241f565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d276001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461162090919063ffffffff16565b507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611d98578082015181840152602081019050611d7d565b50505050905090810190601f168015611dc55780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600033905090565b6000600a60008154809291906001019190505550611e7f824233600a54604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018281526020019350505050604051602081830303815290604052805190602001206001900461207090919063ffffffff16565b9050919050565b611e9b6003544261162090919063ffffffff16565b8160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611f8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b60006120b283836040805190810160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525061214e565b905092915050565b60006120fc83836040805190810160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612213565b905092915050565b600061214683836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506122dd565b905092915050565b600080831415829015156121fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121c25780820151818401526020810190506121a7565b50505050905090810190601f1680156121ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50828481151561220957fe5b0690509392505050565b6000808311829015156122c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561228657808201518184015260208101905061226b565b50505050905090810190601f1680156122b35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858115156122cf57fe5b049050809150509392505050565b6000838311158290151561238c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612351578082015181840152602081019050612336565b50505050905090810190601f16801561237e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106123e057803560ff191683800117855561240e565b8280016001018555821561240e579182015b8281111561240d5782358255916020019190600101906123f2565b5b50905061241b919061249f565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061246057805160ff191683800117855561248e565b8280016001018555821561248e579182015b8281111561248d578251825591602001919060010190612472565b5b50905061249b919061249f565b5090565b6124c191905b808211156124bd5760008160009055506001016124a5565b5090565b9056fea165627a7a7230582016f182d17835a4e05138fe22fe11d15981789a3b862475cd7bf37f554c6ec35b0029",
  "deployedBytecode": "0x6080604052600436106100e0576000357c0100000000000000000000000000000000000000000000000000000000900480630ce90ec2146100e557806317a7f4cc146101135780632052465e146101585780633ccfd60b146102575780634412e1041461026e578063528b7b8f146103145780635f4623f11461038f5780635faf2880146103e0578063715018a6146104255780637bff0a011461043c5780638da5cb5b146105045780638f32d59b1461055b578063c39cbef11461058a578063ccf670f81461061a578063e1fa763814610655578063f2fde38b1461069a575b600080fd5b610111600480360360208110156100fb57600080fd5b81019080803590602001909291905050506106eb565b005b34801561011f57600080fd5b506101566004803603604081101561013657600080fd5b8101908080359060200190929190803590602001909291905050506107b3565b005b34801561016457600080fd5b506101916004803603602081101561017b57600080fd5b810190808035906020019092919050505061095a565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156102175780820151818401526020810190506101fc565b50505050905090810190601f1680156102445780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561026357600080fd5b5061026c610a79565b005b34801561027a57600080fd5b506102bd6004803603602081101561029157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b62565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103005780820151818401526020810190506102e5565b505050509050019250505060405180910390f35b34801561032057600080fd5b5061034d6004803603602081101561033757600080fd5b8101908080359060200190929190505050610ca1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039b57600080fd5b506103de600480360360208110156103b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cd4565b005b3480156103ec57600080fd5b506104236004803603604081101561040357600080fd5b810190808035906020019092919080359060200190929190505050610d94565b005b34801561043157600080fd5b5061043a610f05565b005b34801561044857600080fd5b506105026004803603602081101561045f57600080fd5b810190808035906020019064010000000081111561047c57600080fd5b82018360208201111561048e57600080fd5b803590602001918460018302840111640100000000831117156104b057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611040565b005b34801561051057600080fd5b5061051961105b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561056757600080fd5b50610570611084565b604051808215151515815260200191505060405180910390f35b34801561059657600080fd5b50610618600480360360408110156105ad57600080fd5b8101908080359060200190929190803590602001906401000000008111156105d457600080fd5b8201836020820111156105e657600080fd5b8035906020019184600183028401116401000000008311171561060857600080fd5b90919293919293905050506110e2565b005b34801561062657600080fd5b506106536004803603602081101561063d57600080fd5b810190808035906020019092919050505061125f565b005b34801561066157600080fd5b506106986004803603604081101561067857600080fd5b8101908080359060200190929190803590602001909291905050506112e5565b005b3480156106a657600080fd5b506106e9600480360360208110156106bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611598565b005b6009543410151515610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f46656520746f6f206c6f7721210000000000000000000000000000000000000081525060200191505060405180910390fd5b6107af600160048381548110151561077957fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1661162090919063ffffffff16565b5050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506101406040518083038186803b15801561084557600080fd5b505afa158015610859573d6000803e3d6000fd5b505050506040513d61014081101561087057600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061095583826040805190810160405280600581526020017f6b697474790000000000000000000000000000000000000000000000000000008152506116aa565b505050565b60048181548110151561096957fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a155780601f106109ea57610100808354040283529160200191610a15565b820191906000526020600020905b8154815290600101906020018083116109f857829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b610a81611084565b1515610af5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000610aff61105b565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610b5e573d6000803e3d6000fd5b5050565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610bd35781602001602082028038833980820191505090505b509050600080905060008090505b60048054905081111515610c96578473ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c8957808383815181101515610c6557fe5b9060200190602002018181525050610c8760018361162090919063ffffffff16565b505b8080600101915050610be1565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cdc611084565b1515610d50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b813373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610e91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f54686973207a6f6d62696520646f65736e27742062656c6f6e6720746f20796f81526020017f752121000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60148381600482815481101515610ea457fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1610151515610ed957600080fd5b83600486815481101515610ee957fe5b9060005260206000209060030201600101819055505050505050565b610f0d611084565b1515610f81576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061104b826119d6565b90506110578282611a6b565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110c6611dd9565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b823373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156111df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f54686973207a6f6d62696520646f65736e27742062656c6f6e6720746f20796f81526020017f752121000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600284816004828154811015156111f257fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015151561122757600080fd5b848460048881548110151561123857fe5b9060005260206000209060030201600001919061125692919061239f565b50505050505050565b611267611084565b15156112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8060098190555050565b813373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156113e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f54686973207a6f6d62696520646f65736e27742062656c6f6e6720746f20796f81526020017f752121000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60006004848154811015156113f357fe5b90600052602060002090600302019050600060048481548110151561141457fe5b9060005260206000209060030201905060006114306064611de1565b9050600b54811115156115305761146760018460020160089054906101000a900461ffff1661ffff1661162090919063ffffffff16565b5061149660018460020160009054906101000a900463ffffffff1663ffffffff1661162090919063ffffffff16565b506114c1600183600201600a9054906101000a900461ffff1661ffff1661162090919063ffffffff16565b506115068683600101546040805190810160405280600681526020017f5a6f6d62696500000000000000000000000000000000000000000000000000008152506116aa565b61152b60048781548110151561151857fe5b9060005260206000209060030201611e86565b611590565b61155a60018360020160089054906101000a900461ffff1661ffff1661162090919063ffffffff16565b50611585600184600201600a9054906101000a900461ffff1661ffff1661162090919063ffffffff16565b5061158f83611e86565b5b505050505050565b6115a0611084565b1515611614576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61161d81611ec0565b50565b60008082840190508381101515156116a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b823373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156117a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f54686973207a6f6d62696520646f65736e27742062656c6f6e6720746f20796f81526020017f752121000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60006004858154811015156117b857fe5b906000526020600020906003020190506117d181612049565b1515611845576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f546865207a6f6d626965206973206e6f7420726561647900000000000000000081525060200191505060405180910390fd5b61185a6002548561207090919063ffffffff16565b93506000611888600261187a87856001015461162090919063ffffffff16565b6120ba90919063ffffffff16565b905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b60208310151561190a57805182526020820191506020810190506020830392506118e5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561198657611984606361197661196760648561207090919063ffffffff16565b8461210490919063ffffffff16565b61162090919063ffffffff16565b505b6119c56040805190810160405280600c81526020017f6e65776c7943726561746564000000000000000000000000000000000000000081525082611a6b565b6119ce82611e86565b505050505050565b6000611a64600254836040516020018082805190602001908083835b602083101515611a1757805182526020820191506020810190506020830392506119f2565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206001900461207090919063ffffffff16565b9050919050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515611b48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f547279696e6720746f20637265617465207a6f6d626965206d6f72652074686181526020017f6e206f6e6365212100000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60006001600460c060405190810160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff16815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000019080519060200190611bde92919061241f565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d276001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461162090919063ffffffff16565b507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611d98578082015181840152602081019050611d7d565b50505050905090810190601f168015611dc55780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600033905090565b6000600a60008154809291906001019190505550611e7f824233600a54604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018281526020019350505050604051602081830303815290604052805190602001206001900461207090919063ffffffff16565b9050919050565b611e9b6003544261162090919063ffffffff16565b8160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611f8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b60006120b283836040805190810160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525061214e565b905092915050565b60006120fc83836040805190810160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612213565b905092915050565b600061214683836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506122dd565b905092915050565b600080831415829015156121fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121c25780820151818401526020810190506121a7565b50505050905090810190601f1680156121ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50828481151561220957fe5b0690509392505050565b6000808311829015156122c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561228657808201518184015260208101905061226b565b50505050905090810190601f1680156122b35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858115156122cf57fe5b049050809150509392505050565b6000838311158290151561238c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612351578082015181840152602081019050612336565b50505050905090810190601f16801561237e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106123e057803560ff191683800117855561240e565b8280016001018555821561240e579182015b8281111561240d5782358255916020019190600101906123f2565b5b50905061241b919061249f565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061246057805160ff191683800117855561248e565b8280016001018555821561248e579182015b8281111561248d578251825591602001919060010190612472565b5b50905061249b919061249f565b5090565b6124c191905b808211156124bd5760008160009055506001016124a5565b5090565b9056fea165627a7a7230582016f182d17835a4e05138fe22fe11d15981789a3b862475cd7bf37f554c6ec35b0029",
  "sourceMap": "79:1050:2:-;;;684:2:3;667:19;;717:9;;711:2;:15;693:33;;754:6;733:27;;143:1:2;126:18;;183:2;151:34;;698:17:8;718:12;:10;;;:12;;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;79:1050:2;;788:96:7;833:15;867:10;860:17;;788:96;:::o;79:1050:2:-;;;;;;;",
  "deployedSourceMap": "79:1050:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:160:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;543:160:5;;;;;;;;;;;;;;;;;:::i;:::-;;1816:208:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1816:208:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1816:208:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1328:23:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1328:23:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1328:23:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1328:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;283:157:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:157:5;;;:::i;:::-;;1061:437;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1061:437:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1061:437:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1061:437:5;;;;;;;;;;;;;;;;;1360:46:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1360:46:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1360:46:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;911:121:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;911:121:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;911:121:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;893:160:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;893:160:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;893:160:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1684:137:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1684:137:8;;;:::i;:::-;;2264:155:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2264:155:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2264:155:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2264:155:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2264:155:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2264:155:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2264:155:3;;;;;;;;;;;;;;;:::i;:::-;;899:77:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:77:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:92:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;711:174:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;711:174:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;711:174:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;711:174:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;711:174:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;711:174:5;;;;;;;;;;;;:::i;:::-;;448:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;448:89:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;448:89:5;;;;;;;;;;;;;;;;;:::i;:::-;;396:728:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;396:728:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;396:728:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1970:107:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1970:107:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;543:160:5;625:10;;612:9;:23;;604:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:31;693:1;664:7;672:9;664:18;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:28;;;;:31;;;;:::i;:::-;;543:160;:::o;1816:208:4:-;1888:13;1934:5;;;;;;;;;;;:14;;;1949:8;1934:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1934:24:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1934:24:4;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1934:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1912:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1969:45;1985:9;1996:8;1969:45;;;;;;;;;;;;;;;;;;:15;:45::i;:::-;1816:208;;;:::o;1328:23:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;283:157:5:-;1103:9:8;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;333:22:5;374:7;:5;:7::i;:::-;333:50;;394:6;:15;;:38;418:4;410:21;;;394:38;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;394:38:5;1159:1:8;283:157:5:o;1061:437::-;1133:22;1170:20;1204:16;:30;1221:12;1204:30;;;;;;;;;;;;;;;;1193:42;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1193:42:5;;;;1170:65;;1246:12;1261:1;1246:16;;1277:6;1286:1;1277:10;;1273:192;1294:7;:14;;;;1289:1;:19;;1273:192;;;1353:12;1333:32;;:13;:16;1347:1;1333:16;;;;;;;;;;;;;;;;;;;;;:32;;;1330:124;;;1404:1;1386:6;1393:7;1386:15;;;;;;;;;;;;;;;;;:19;;;;;1424:14;1436:1;1424:7;:11;;:14;;;;:::i;:::-;;1330:124;1310:3;;;;;;;1273:192;;;;1484:6;1477:13;;;;1061:437;;;:::o;1360:46:3:-;;;;;;;;;;;;;;;;;;;;;;:::o;911:121:4:-;1103:9:8;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:8:4;992:5;;:32;;;;;;;;;;;;;;;;;;911:121;:::o;893:160:5:-;965:9;833:10:4;805:38;;:13;:24;819:9;805:24;;;;;;;;;;;;;;;;;;;;;:38;;;797:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:2:5;991:9;248:6;220:7;228:9;220:18;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;212:43;;;;;;;;1038:7;1013;1021:9;1013:18;;;;;;;;;;;;;;;;;;;;:22;;:32;;;;894:1:4;;893:160:5;;;:::o;1684:137:8:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;2264:155:3:-;2331:12;2346:25;2365:5;2346:18;:25::i;:::-;2331:40;;2382:29;2396:5;2403:7;2382:13;:29::i;:::-;2264:155;;:::o;899:77:8:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;711:174:5:-;796:9;833:10:4;805:38;;:13;:24;819:9;805:24;;;;;;;;;;;;;;;;;;;;;:38;;;797:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;818:1:5;821:9;248:6;220:7;228:9;220:18;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;212:43;;;;;;;;869:8;;843:7;851:9;843:18;;;;;;;;;;;;;;;;;;;;:23;;:34;;;;;;;:::i;:::-;;894:1:4;;711:174:5;;;;:::o;448:89::-;1103:9:8;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:4:5;512:10;:17;;;;448:89;:::o;396:728:2:-;467:9;833:10:4;805:38;;:13;:24;819:9;805:24;;;;;;;;;;;;;;;;;;;;;:38;;;797:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:23:2;517:7;525:9;517:18;;;;;;;;;;;;;;;;;;;;491:44;;546:23;572:7;580:9;572:18;;;;;;;;;;;;;;;;;;;;546:44;;601:10;614:17;627:3;614:12;:17::i;:::-;601:30;;654:24;;645:5;:33;;642:473;;;695:24;717:1;695:8;:17;;;;;;;;;;;;:21;;;;:24;;;;:::i;:::-;;734:21;753:1;734:8;:14;;;;;;;;;;;;:18;;;;:21;;;;:::i;:::-;;770:25;793:1;770:8;:18;;;;;;;;;;;;:22;;;;:25;;;;:::i;:::-;;851:50;867:9;878:8;:12;;;851:50;;;;;;;;;;;;;;;;;;:15;:50::i;:::-;916:36;933:7;941:9;933:18;;;;;;;;;;;;;;;;;;;;916:16;:36::i;:::-;642:473;;;996:24;1018:1;996:8;:17;;;;;;;;;;;;:21;;;;:24;;;;:::i;:::-;;1035:25;1058:1;1035:8;:18;;;;;;;;;;;;:22;;;;:25;;;;:::i;:::-;;1075:26;1092:8;1075:16;:26::i;:::-;642:473;894:1:4;;;396:728:2;;;:::o;1970:107:8:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;859:181:1:-;917:7;937:9;953:1;949;:5;937:17;;978:1;973;:6;;965:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:1;1024:8;;;859:181;;;;:::o;1038:770:4:-;1143:9;833:10;805:38;;:13;:24;819:9;805:24;;;;;;;;;;;;;;;;;;;;;:38;;;797:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:23;1193:7;1201:9;1193:18;;;;;;;;;;;;;;;;;;;;1167:44;;1316:18;1325:8;1316;:18::i;:::-;1307:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1389:26;1404:10;;1389;:14;;:26;;;;:::i;:::-;1376:39;;1426:11;1440:37;1475:1;1441:28;1458:10;1441:8;:12;;;:16;;:28;;;;:::i;:::-;1440:34;;:37;;;;:::i;:::-;1426:51;;1542:25;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1542:25:4;;;1532:36;;;;;;1518:8;1501:26;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1501:26:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1501:26:4;;;1491:37;;;;;;:77;1488:228;;;1669:35;1701:2;1669:27;1680:15;1691:3;1680:6;:10;;:15;;;;:::i;:::-;1669:6;:10;;:27;;;;:::i;:::-;:31;;:35;;;;:::i;:::-;;1488:228;1726:37;;;;;;;;;;;;;;;;;;;1756:6;1726:13;:37::i;:::-;1774:26;1791:8;1774:16;:26::i;:::-;894:1;;1038:770;;;;:::o;2094:162:3:-;2164:9;2193:55;2237:10;;2225:4;2208:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2208:22:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2208:22:3;;;2198:33;;;;;;2193:39;;;:43;;:55;;;;:::i;:::-;2186:62;;2094:162;;;:::o;1692:394::-;1807:1;1775:16;:28;1792:10;1775:28;;;;;;;;;;;;;;;;:33;1767:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:7;1948:1;1874:7;1887:57;;;;;;;;;1894:5;1887:57;;;;1901:4;1887:57;;;;1907:1;1887:57;;;;;;1923:13;;1917:3;:19;1887:57;;;;;;1939:1;1887:57;;;;;;1942:1;1887:57;;;;;1874:71;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1874:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:75;1864:85;;1980:10;1960:13;:17;1974:2;1960:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;2001:35;2034:1;2001:16;:28;2018:10;2001:28;;;;;;;;;;;;;;;;:32;;:35;;;;:::i;:::-;;2052:26;2062:2;2066:5;2073:4;2052:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2052:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1692:394;;;:::o;788:96:7:-;833:15;867:10;860:17;;788:96;:::o;194:194:2:-;249:14;276:9;;:11;;;;;;;;;;;;;305:75;371:8;337:3;342:10;354:9;;320:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;320:44:2;;;310:55;;;;;;305:61;;;:65;;:75;;;;:::i;:::-;298:82;;194:194;;;:::o;2032:128:4:-;2129:22;2137:13;;2129:3;:7;;:22;;;;:::i;:::-;2102:7;:17;;;:50;;;;;;;;;;;;;;;;;;2032:128;:::o;2178:225:8:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;2168:129:4:-;2233:12;2286:3;2265:7;:17;;;;;;;;;;;;:24;;;;2258:31;;2168:129;;;:::o;4634:130:1:-;4692:7;4719:37;4723:1;4726;4719:37;;;;;;;;;;;;;;;;;;:3;:37::i;:::-;4712:44;;4634:130;;;;:::o;3170:132::-;3228:7;3255:39;3259:1;3262;3255:39;;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3248:46;;3170:132;;;;:::o;1315:136::-;1373:7;1400:43;1404:1;1407;1400:43;;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1393:50;;1315:136;;;;:::o;5283:166::-;5369:7;5402:1;5397;:6;;5405:12;5389:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5389:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5440:1;5436;:5;;;;;;;;5429:12;;5283:166;;;;;:::o;3832:345::-;3918:7;4017:1;4013;:5;4020:12;4005:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4005:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:9;4060:1;4056;:5;;;;;;;;4044:17;;4168:1;4161:8;;;3832:345;;;;;:::o;1788:192::-;1874:7;1907:1;1902;:6;;1910:12;1894:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1894:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:9;1950:1;1946;:5;1934:17;;1971:1;1964:8;;;1788:192;;;;;:::o;79:1050:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity  >=0.5.0 <0.6.0;\r\n\r\nimport \"../contracts/ZombieHelper.sol\";\r\n\r\ncontract ZombieAttack is ZombieHelper {\r\n\r\n    uint randNonce = 0;\r\n    uint attackVictoryProbability = 70;\r\n\r\n    function pseudoRandom(uint _modulus) internal returns (uint pseudoInt) {\r\n        randNonce++;\r\n        return uint(keccak256(abi.encodePacked(now, msg.sender, randNonce))).mod(_modulus);\r\n    }\r\n\r\n    function attack(uint _zombieId, uint _targetId) external ownerOfZombie(_zombieId) {\r\n\r\n        Zombie storage attacker = zombies[_zombieId];\r\n        Zombie storage defender = zombies[_targetId];\r\n        uint value = pseudoRandom(100);\r\n        if(value <= attackVictoryProbability) {\r\n            attacker.winCount.add(1);\r\n            attacker.level.add(1);\r\n            defender.lossCount.add(1);\r\n            // this.levelUp(_zombieId);\r\n            feedAndMultiply(_zombieId, defender.dna, \"Zombie\");\r\n            _triggerCooldown(zombies[_zombieId]);\r\n        }\r\n\r\n        else {\r\n            defender.winCount.add(1);\r\n            attacker.lossCount.add(1);\r\n            _triggerCooldown(attacker);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\Kahan Majmudar\\OneDrive\\Study\\Blockchain BTP\\CryptoZombies\\contracts\\ZombieAttack.sol",
  "ast": {
    "absolutePath": "/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/CryptoZombies/contracts/ZombieAttack.sol",
    "exportedSymbols": {
      "ZombieAttack": [
        742
      ]
    },
    "id": 743,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 614,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/CryptoZombies/contracts/ZombieHelper.sol",
        "file": "../contracts/ZombieHelper.sol",
        "id": 615,
        "nodeType": "ImportDirective",
        "scope": 743,
        "sourceUnit": 1289,
        "src": "36:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 616,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1288,
              "src": "104:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$1288",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 617,
            "nodeType": "InheritanceSpecifier",
            "src": "104:12:2"
          }
        ],
        "contractDependencies": [
          901,
          1102,
          1288,
          1505,
          1623
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 742,
        "linearizedBaseContracts": [
          742,
          1288,
          1102,
          901,
          1623,
          1505
        ],
        "name": "ZombieAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 620,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 742,
            "src": "126:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 618,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "126:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 619,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "143:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 623,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "scope": 742,
            "src": "151:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 621,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "151:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 622,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "183:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "265:123:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "276:11:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 630,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 620,
                      "src": "276:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "276:11:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 645,
                        "name": "_modulus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "371:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 637,
                                    "name": "now",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1640,
                                    "src": "337:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 638,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1638,
                                      "src": "342:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 639,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "342:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 640,
                                    "name": "randNonce",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 620,
                                    "src": "354:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 635,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1625,
                                    "src": "320:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "320:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "320:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 634,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1632,
                              "src": "310:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "310:55:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "305:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "305:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 218,
                      "src": "305:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "305:75:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 629,
                  "id": 647,
                  "nodeType": "Return",
                  "src": "298:82:2"
                }
              ]
            },
            "documentation": null,
            "id": 649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pseudoRandom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "216:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "215:15:2"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "name": "pseudoInt",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "249:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "248:16:2"
            },
            "scope": 742,
            "src": "194:194:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "478:646:2",
              "statements": [
                {
                  "assignments": [
                    660
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 660,
                      "name": "attacker",
                      "nodeType": "VariableDeclaration",
                      "scope": 740,
                      "src": "491:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 659,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 781,
                        "src": "491:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 664,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 661,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "517:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$781_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 663,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 662,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "525:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "517:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$781_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "491:44:2"
                },
                {
                  "assignments": [
                    666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 666,
                      "name": "defender",
                      "nodeType": "VariableDeclaration",
                      "scope": 740,
                      "src": "546:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 665,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 781,
                        "src": "546:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 670,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 667,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "572:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$781_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 669,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 668,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "580:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "572:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$781_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "546:44:2"
                },
                {
                  "assignments": [
                    672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 672,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 740,
                      "src": "601:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 671,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "601:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 676,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "627:3:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 673,
                      "name": "pseudoRandom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "614:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "601:30:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 677,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "645:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 678,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "654:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "645:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 738,
                    "nodeType": "Block",
                    "src": "981:134:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1018:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 718,
                                "name": "defender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "996:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 721,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "winCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 778,
                              "src": "996:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "id": 722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 82,
                            "src": "996:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "996:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 725,
                        "nodeType": "ExpressionStatement",
                        "src": "996:24:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1058:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 726,
                                "name": "attacker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 660,
                                "src": "1035:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 729,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lossCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "1035:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "id": 730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 82,
                            "src": "1035:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1035:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 733,
                        "nodeType": "ExpressionStatement",
                        "src": "1035:25:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 735,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "1092:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            ],
                            "id": 734,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1088,
                            "src": "1075:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$781_storage_ptr_$returns$__$",
                              "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1075:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 737,
                        "nodeType": "ExpressionStatement",
                        "src": "1075:26:2"
                      }
                    ]
                  },
                  "id": 739,
                  "nodeType": "IfStatement",
                  "src": "642:473:2",
                  "trueBody": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "680:284:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "717:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 680,
                                "name": "attacker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 660,
                                "src": "695:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "winCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 778,
                              "src": "695:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "id": 684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 82,
                            "src": "695:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "695:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 687,
                        "nodeType": "ExpressionStatement",
                        "src": "695:24:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "753:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 688,
                                "name": "attacker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 660,
                                "src": "734:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 691,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 774,
                              "src": "734:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "id": 692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 82,
                            "src": "734:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "734:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 695,
                        "nodeType": "ExpressionStatement",
                        "src": "734:21:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "793:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 696,
                                "name": "defender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "770:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 699,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lossCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "770:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "id": 700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 82,
                            "src": "770:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "770:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 703,
                        "nodeType": "ExpressionStatement",
                        "src": "770:25:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 705,
                              "name": "_zombieId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 651,
                              "src": "867:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 706,
                                "name": "defender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "878:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 707,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 772,
                              "src": "878:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5a6f6d626965",
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "892:8:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f41cb73ce9ba5c1f594bcdfd56e2d14e42d2ecc23f0a4863835bdd4baacd8b72",
                                "typeString": "literal_string \"Zombie\""
                              },
                              "value": "Zombie"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f41cb73ce9ba5c1f594bcdfd56e2d14e42d2ecc23f0a4863835bdd4baacd8b72",
                                "typeString": "literal_string \"Zombie\""
                              }
                            ],
                            "id": 704,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1046,
                            "src": "851:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "851:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 710,
                        "nodeType": "ExpressionStatement",
                        "src": "851:50:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 712,
                                "name": "zombies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 784,
                                "src": "933:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Zombie_$781_storage_$dyn_storage",
                                  "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                                }
                              },
                              "id": 714,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 713,
                                "name": "_zombieId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 651,
                                "src": "941:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "933:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$781_storage",
                                "typeString": "struct ZombieFactory.Zombie storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Zombie_$781_storage",
                                "typeString": "struct ZombieFactory.Zombie storage ref"
                              }
                            ],
                            "id": 711,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1088,
                            "src": "916:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$781_storage_ptr_$returns$__$",
                              "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "916:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "916:36:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 741,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 656,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 651,
                    "src": "467:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 657,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 655,
                  "name": "ownerOfZombie",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 950,
                  "src": "453:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "453:24:2"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "412:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "428:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "428:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "411:32:2"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "478:0:2"
            },
            "scope": 742,
            "src": "396:728:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 743,
        "src": "79:1050:2"
      }
    ],
    "src": "0:1129:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/CryptoZombies/contracts/ZombieAttack.sol",
    "exportedSymbols": {
      "ZombieAttack": [
        742
      ]
    },
    "id": 743,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 614,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/CryptoZombies/contracts/ZombieHelper.sol",
        "file": "../contracts/ZombieHelper.sol",
        "id": 615,
        "nodeType": "ImportDirective",
        "scope": 743,
        "sourceUnit": 1289,
        "src": "36:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 616,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1288,
              "src": "104:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$1288",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 617,
            "nodeType": "InheritanceSpecifier",
            "src": "104:12:2"
          }
        ],
        "contractDependencies": [
          901,
          1102,
          1288,
          1505,
          1623
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 742,
        "linearizedBaseContracts": [
          742,
          1288,
          1102,
          901,
          1623,
          1505
        ],
        "name": "ZombieAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 620,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 742,
            "src": "126:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 618,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "126:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 619,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "143:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 623,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "scope": 742,
            "src": "151:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 621,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "151:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 622,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "183:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "265:123:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "276:11:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 630,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 620,
                      "src": "276:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "276:11:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 645,
                        "name": "_modulus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "371:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 637,
                                    "name": "now",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1640,
                                    "src": "337:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 638,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1638,
                                      "src": "342:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 639,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "342:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 640,
                                    "name": "randNonce",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 620,
                                    "src": "354:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 635,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1625,
                                    "src": "320:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "320:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "320:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 634,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1632,
                              "src": "310:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "310:55:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "305:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "305:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 218,
                      "src": "305:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "305:75:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 629,
                  "id": 647,
                  "nodeType": "Return",
                  "src": "298:82:2"
                }
              ]
            },
            "documentation": null,
            "id": 649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pseudoRandom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "216:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "215:15:2"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "name": "pseudoInt",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "249:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "248:16:2"
            },
            "scope": 742,
            "src": "194:194:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "478:646:2",
              "statements": [
                {
                  "assignments": [
                    660
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 660,
                      "name": "attacker",
                      "nodeType": "VariableDeclaration",
                      "scope": 740,
                      "src": "491:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 659,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 781,
                        "src": "491:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 664,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 661,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "517:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$781_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 663,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 662,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "525:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "517:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$781_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "491:44:2"
                },
                {
                  "assignments": [
                    666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 666,
                      "name": "defender",
                      "nodeType": "VariableDeclaration",
                      "scope": 740,
                      "src": "546:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 665,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 781,
                        "src": "546:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 670,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 667,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "572:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$781_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 669,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 668,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "580:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "572:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$781_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "546:44:2"
                },
                {
                  "assignments": [
                    672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 672,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 740,
                      "src": "601:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 671,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "601:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 676,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "627:3:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 673,
                      "name": "pseudoRandom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "614:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "601:30:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 677,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "645:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 678,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "654:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "645:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 738,
                    "nodeType": "Block",
                    "src": "981:134:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1018:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 718,
                                "name": "defender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "996:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 721,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "winCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 778,
                              "src": "996:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "id": 722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 82,
                            "src": "996:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "996:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 725,
                        "nodeType": "ExpressionStatement",
                        "src": "996:24:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1058:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 726,
                                "name": "attacker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 660,
                                "src": "1035:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 729,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lossCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "1035:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "id": 730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 82,
                            "src": "1035:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1035:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 733,
                        "nodeType": "ExpressionStatement",
                        "src": "1035:25:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 735,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "1092:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            ],
                            "id": 734,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1088,
                            "src": "1075:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$781_storage_ptr_$returns$__$",
                              "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1075:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 737,
                        "nodeType": "ExpressionStatement",
                        "src": "1075:26:2"
                      }
                    ]
                  },
                  "id": 739,
                  "nodeType": "IfStatement",
                  "src": "642:473:2",
                  "trueBody": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "680:284:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "717:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 680,
                                "name": "attacker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 660,
                                "src": "695:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "winCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 778,
                              "src": "695:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "id": 684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 82,
                            "src": "695:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "695:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 687,
                        "nodeType": "ExpressionStatement",
                        "src": "695:24:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "753:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 688,
                                "name": "attacker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 660,
                                "src": "734:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 691,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 774,
                              "src": "734:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "id": 692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 82,
                            "src": "734:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "734:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 695,
                        "nodeType": "ExpressionStatement",
                        "src": "734:21:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "793:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 696,
                                "name": "defender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "770:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 699,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lossCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "770:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "id": 700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 82,
                            "src": "770:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "770:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 703,
                        "nodeType": "ExpressionStatement",
                        "src": "770:25:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 705,
                              "name": "_zombieId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 651,
                              "src": "867:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 706,
                                "name": "defender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "878:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$781_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 707,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 772,
                              "src": "878:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5a6f6d626965",
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "892:8:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f41cb73ce9ba5c1f594bcdfd56e2d14e42d2ecc23f0a4863835bdd4baacd8b72",
                                "typeString": "literal_string \"Zombie\""
                              },
                              "value": "Zombie"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f41cb73ce9ba5c1f594bcdfd56e2d14e42d2ecc23f0a4863835bdd4baacd8b72",
                                "typeString": "literal_string \"Zombie\""
                              }
                            ],
                            "id": 704,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1046,
                            "src": "851:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "851:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 710,
                        "nodeType": "ExpressionStatement",
                        "src": "851:50:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 712,
                                "name": "zombies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 784,
                                "src": "933:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Zombie_$781_storage_$dyn_storage",
                                  "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                                }
                              },
                              "id": 714,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 713,
                                "name": "_zombieId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 651,
                                "src": "941:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "933:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$781_storage",
                                "typeString": "struct ZombieFactory.Zombie storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Zombie_$781_storage",
                                "typeString": "struct ZombieFactory.Zombie storage ref"
                              }
                            ],
                            "id": 711,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1088,
                            "src": "916:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$781_storage_ptr_$returns$__$",
                              "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "916:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "916:36:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 741,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 656,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 651,
                    "src": "467:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 657,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 655,
                  "name": "ownerOfZombie",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 950,
                  "src": "453:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "453:24:2"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "412:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "428:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "428:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "411:32:2"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "478:0:2"
            },
            "scope": 742,
            "src": "396:728:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 743,
        "src": "79:1050:2"
      }
    ],
    "src": "0:1129:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-09T07:40:01.750Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}