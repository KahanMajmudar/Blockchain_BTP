{
  "contractName": "OracleTest",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor",
      "payable": true
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "LogConstructorInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "queryID",
          "type": "bytes32"
        }
      ],
      "name": "LogQueryId",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "btcPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "ethPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "randomNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRandomNumber",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getEthPrice",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getBtcPrice",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"LogConstructorInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"queryID\",\"type\":\"bytes32\"}],\"name\":\"LogQueryId\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"btcPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBtcPrice\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthPrice\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandomNumber\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/Oracles/contracts/OracleService.sol\":\"OracleTest\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/Oracles/contracts/OracleService.sol\":{\"keccak256\":\"0xac4138c2133055632b966031be449d38fa5c087b920953e084195db891392d7c\",\"urls\":[\"bzz-raw://2f50575e6ac11cf9fd199bfed52859408c763d8f685defdec00646a1015cb6a7\",\"dweb:/ipfs/Qma2jbdG66w3jpkhbkz9xevLXir8rXdurHRFAESojyUc4F\"]},\"/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/Oracles/contracts/provableAPI_0.6.sol\":{\"keccak256\":\"0x1fc6722eebb007804dc77ee8e11687a961b4e544ccccf8af18d8f445e0f52a34\",\"urls\":[\"bzz-raw://eaf215a13707520c96593e2d662d8e3eb18ff439a05468bc8e453532fe1e8286\",\"dweb:/ipfs/QmSEi8wMqzGPjH6d6KbZJzz4SgvSAHgCMVgFNtHXmhCUvW\"]}},\"version\":1}",
  "bytecode": "0x60806040527f11a3fca63f87bd67d7f9f72b744acc8be2193705e7a734ac3a773d35d259e87b60405180806020018281038252603c815260200180612aa2603c913960400191505060405180910390a1612a448061005e6000396000f3fe608060405260043610610098576000357c010000000000000000000000000000000000000000000000000000000090048063a8ad52d11161006b578063a8ad52d1146102ec578063ccbac9f514610317578063dbdff2c114610342578063ff186b2e1461034c57610098565b806327dc297e1461009d57806338bbfa501461016f5780633a3610bc146102d857806367c9b017146102e2575b600080fd5b3480156100a957600080fd5b5061016d600480360360408110156100c057600080fd5b8101908080359060200190929190803590602001906401000000008111156100e757600080fd5b8201836020820111156100f957600080fd5b8035906020019184600183028401116401000000008311171561011b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610377565b005b34801561017b57600080fd5b506102d66004803603606081101561019257600080fd5b8101908080359060200190929190803590602001906401000000008111156101b957600080fd5b8201836020820111156101cb57600080fd5b803590602001918460018302840111640100000000831117156101ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561025057600080fd5b82018360208201111561026257600080fd5b8035906020019184600183028401116401000000008311171561028457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061055a565b005b6102e061057e565b005b6102ea610790565b005b3480156102f857600080fd5b506103016109a3565b6040518082815260200191505060405180910390f35b34801561032357600080fd5b5061032c6109a9565b6040518082815260200191505060405180910390f35b61034a6109af565b005b34801561035857600080fd5b50610361610bdc565b6040518082815260200191505060405180910390f35b61037f610be2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b657600080fd5b6009600083815260200190815260200160002060009054906101000a900460ff166103e057600080fd5b6103e8612746565b600860008481526020019081526020016000206040518060200160405290816000820160009054906101000a900460ff16600281111561042457fe5b600281111561042f57fe5b8152505090506000600281111561044257fe5b8160000151600281111561045257fe5b14156104945761046182610f55565b60058190555060006009600085815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600160028111156104a157fe5b816000015160028111156104b157fe5b14156104f5576104c2826002610f69565b60068190555060006009600085815260200190815260200160002060006101000a81548160ff0219169083151502179055505b60028081111561050157fe5b8160000151600281111561051157fe5b141561055557610522826002610f69565b60078190555060006009600085815260200190815260200160002060006101000a81548160ff0219169083151502179055505b505050565b60006001026003600080600102815260200190815260200160002081905550505050565b3073ffffffffffffffffffffffffffffffffffffffff16316105d46040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506111f8565b111561062a577fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252604b81526020018061283f604b913960600191505060405180910390a161078e565b7fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252603581526020018061280a6035913960400191505060405180910390a160006106ce6040518060400160405280600381526020017f55524c000000000000000000000000000000000000000000000000000000000081525060405180606001604052806040815260200161294e604091396115dd565b905060016009600083815260200190815260200160002060006101000a81548160ff021916908315150217905550604051806020016040528060028081111561071357fe5b8152506008600083815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600281111561074d57fe5b02179055509050507fba5c08e7ca16d504b0119b4b9e09b27a571d73bf338d327cfbbe54b0b55ff88d816040518082815260200191505060405180910390a1505b565b3073ffffffffffffffffffffffffffffffffffffffff16316107e66040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506111f8565b111561083c577fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252604b81526020018061283f604b913960600191505060405180910390a16109a1565b7fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252603581526020018061280a6035913960400191505060405180910390a160006108e06040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506040518060600160405280604081526020016129cf604091396115dd565b905060016009600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060405180602001604052806001600281111561092657fe5b8152506008600083815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600281111561096057fe5b02179055509050507fba5c08e7ca16d504b0119b4b9e09b27a571d73bf338d327cfbbe54b0b55ff88d816040518082815260200191505060405180910390a1505b565b60075481565b60055481565b3073ffffffffffffffffffffffffffffffffffffffff1631610a056040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506111f8565b1115610a5b577fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252604b81526020018061283f604b913960600191505060405180910390a1610bda565b7fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252603581526020018061280a6035913960400191505060405180910390a16000610b196040518060400160405280600381526020017f55524c000000000000000000000000000000000000000000000000000000000081525060405180608001604052806041815260200161298e6041913960405180610100016040528060c4815260200161288a60c49139611b94565b905060016009600083815260200190815260200160002060006101000a81548160ff021916908315150217905550604051806020016040528060006002811115610b5f57fe5b8152506008600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115610b9957fe5b02179055509050507fba5c08e7ca16d504b0119b4b9e09b27a571d73bf338d327cfbbe54b0b55ff88d816040518082815260200191505060405180910390a1505b565b60065481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610c6a57506000610c68600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121b9565b145b15610c7b57610c7960006121c4565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d0157600080fd5b505af1158015610d15573d6000803e3d6000fd5b505050506040513d6020811015610d2b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e9057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610e1557600080fd5b505af1158015610e29573d6000803e3d6000fd5b505050506040513d6020811015610e3f57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f1557600080fd5b505af1158015610f29573d6000803e3d6000fd5b505050506040513d6020811015610f3f57600080fd5b8101908080519060200190929190505050905090565b6000610f62826000610f69565b9050919050565b600060608390506000809050600080905060008090505b83518110156111d9576030848281518110610f9757fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff16101580156110915750603984828151811061101e57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1611155b156111425781156110b45760008614156110aa576111d9565b8580600190039650505b600a8302925060308482815181106110c857fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1603830192506111cc565b602e84828151811061115057fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1614156111cb57600191505b5b8080600101915050610f80565b5060008511156111ec5784600a0a820291505b81935050505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806112805750600061127e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121b9565b145b156112915761128f60006121c4565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561131757600080fd5b505af115801561132b573d6000803e3d6000fd5b505050506040513d602081101561134157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114a657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561142b57600080fd5b505af115801561143f573d6000803e3d6000fd5b505050506040513d602081101561145557600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561154f578082015181840152602081019050611534565b50505050905090810190601f16801561157c5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561159b57600080fd5b505af11580156115af573d6000803e3d6000fd5b505050506040513d60208110156115c557600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061166557506000611663600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121b9565b145b156116765761167460006121c4565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156116fc57600080fd5b505af1158015611710573d6000803e3d6000fd5b505050506040513d602081101561172657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461188b57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561181057600080fd5b505af1158015611824573d6000803e3d6000fd5b505050506040513d602081101561183a57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561193657808201518184015260208101905061191b565b50505050905090810190601f1680156119635780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561198257600080fd5b505af1158015611996573d6000803e3d6000fd5b505050506040513d60208110156119ac57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156119e3576000600102915050611b8e565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015611a9a578082015181840152602081019050611a7f565b50505050905090810190601f168015611ac75780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015611b00578082015181840152602081019050611ae5565b50505050905090810190601f168015611b2d5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015611b4e57600080fd5b505af1158015611b62573d6000803e3d6000fd5b50505050506040513d6020811015611b7957600080fd5b81019080805190602001909291905050509150505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611c1c57506000611c1a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121b9565b145b15611c2d57611c2b60006121c4565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611cb357600080fd5b505af1158015611cc7573d6000803e3d6000fd5b505050506040513d6020811015611cdd57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e4257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611dc757600080fd5b505af1158015611ddb573d6000803e3d6000fd5b505050506040513d6020811015611df157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611eed578082015181840152602081019050611ed2565b50505050905090810190601f168015611f1a5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015611f3957600080fd5b505af1158015611f4d573d6000803e3d6000fd5b505050506040513d6020811015611f6357600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115611f9a5760006001029150506121b2565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663772286598260008888886040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561205657808201518184015260208101905061203b565b50505050905090810190601f1680156120835780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b838110156120bc5780820151818401526020810190506120a1565b50505050905090810190601f1680156120e95780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015612122578082015181840152602081019050612107565b50505050905090810190601f16801561214f5780820380516001836020036101000a031916815260200191505b509750505050505050506020604051808303818588803b15801561217257600080fd5b505af1158015612186573d6000803e3d6000fd5b50505050506040513d602081101561219d57600080fd5b81019080805190602001909291905050509150505b9392505050565b6000813b9050919050565b60006121ce6121d5565b9050919050565b6000806121f5731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6121b9565b111561229757731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061228e6040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525061272c565b60019050612729565b60006122b673c03a2615d5efaf5f49f60b7bb6583eaec212fdf16121b9565b11156123585773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061234f6040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525061272c565b60019050612729565b600061237773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6121b9565b11156124195773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124106040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525061272c565b60019050612729565b600061243873146500cfd35b22e4a392fe0adc06de1a1368ed486121b9565b11156124da5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124d16040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525061272c565b60019050612729565b60006124f973a2998efd205fb9d4b4963afb70778d6354ad3a416121b9565b111561259b5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125926040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525061272c565b60019050612729565b60006125ba736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756121b9565b111561261e57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612729565b600061263d7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6121b9565b11156126a1577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612729565b60006126c07351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6121b9565b1115612724577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612729565b600090505b90565b8060029080519060200190612742929190612764565b5050565b60405180602001604052806000600281111561275e57fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106127a557805160ff19168380011785556127d3565b828001600101855582156127d3579182015b828111156127d25782518255916020019190600101906127b7565b5b5090506127e091906127e4565b5090565b61280691905b808211156128025760008160009055506001016127ea565b5090565b9056fe50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f7220746865207175657279206665650a7b226a736f6e727063223a2022322e30222c20226d6574686f64223a202267656e65726174655369676e6564496e746567657273222c2022706172616d73223a207b20226170694b6579223a202230303030303030302d303030302d303030302d303030302d303030303030303030303030222c20226e223a20312c20226d696e223a20312c20226d6178223a203130302c20227265706c6163656d656e74223a20747275652c202262617365223a203130207d2c20226964223a203134323135207d6a736f6e2868747470733a2f2f6170692e70726f2e636f696e626173652e636f6d2f70726f64756374732f4254432d5553442f7469636b6572292e70726963656a736f6e2868747470733a2f2f6170692e72616e646f6d2e6f72672f6a736f6e2d7270632f322f696e766f6b65292e726573756c742e72616e646f6d2e646174616a736f6e2868747470733a2f2f6170692e70726f2e636f696e626173652e636f6d2f70726f64756374732f4554482d5553442f7469636b6572292e7072696365a2646970667358221220962f62eaa244f4fbe95d01be2d8b4a0f18d8e565e0b4d3dba07de2a151f4c41f64736f6c63430006060033436f6e7374727563746f722077617320696e697469617465642e20526561647920746f2073656e64207468652050726f7661626c652051756572792e",
  "deployedBytecode": "0x608060405260043610610098576000357c010000000000000000000000000000000000000000000000000000000090048063a8ad52d11161006b578063a8ad52d1146102ec578063ccbac9f514610317578063dbdff2c114610342578063ff186b2e1461034c57610098565b806327dc297e1461009d57806338bbfa501461016f5780633a3610bc146102d857806367c9b017146102e2575b600080fd5b3480156100a957600080fd5b5061016d600480360360408110156100c057600080fd5b8101908080359060200190929190803590602001906401000000008111156100e757600080fd5b8201836020820111156100f957600080fd5b8035906020019184600183028401116401000000008311171561011b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610377565b005b34801561017b57600080fd5b506102d66004803603606081101561019257600080fd5b8101908080359060200190929190803590602001906401000000008111156101b957600080fd5b8201836020820111156101cb57600080fd5b803590602001918460018302840111640100000000831117156101ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561025057600080fd5b82018360208201111561026257600080fd5b8035906020019184600183028401116401000000008311171561028457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061055a565b005b6102e061057e565b005b6102ea610790565b005b3480156102f857600080fd5b506103016109a3565b6040518082815260200191505060405180910390f35b34801561032357600080fd5b5061032c6109a9565b6040518082815260200191505060405180910390f35b61034a6109af565b005b34801561035857600080fd5b50610361610bdc565b6040518082815260200191505060405180910390f35b61037f610be2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b657600080fd5b6009600083815260200190815260200160002060009054906101000a900460ff166103e057600080fd5b6103e8612746565b600860008481526020019081526020016000206040518060200160405290816000820160009054906101000a900460ff16600281111561042457fe5b600281111561042f57fe5b8152505090506000600281111561044257fe5b8160000151600281111561045257fe5b14156104945761046182610f55565b60058190555060006009600085815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600160028111156104a157fe5b816000015160028111156104b157fe5b14156104f5576104c2826002610f69565b60068190555060006009600085815260200190815260200160002060006101000a81548160ff0219169083151502179055505b60028081111561050157fe5b8160000151600281111561051157fe5b141561055557610522826002610f69565b60078190555060006009600085815260200190815260200160002060006101000a81548160ff0219169083151502179055505b505050565b60006001026003600080600102815260200190815260200160002081905550505050565b3073ffffffffffffffffffffffffffffffffffffffff16316105d46040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506111f8565b111561062a577fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252604b81526020018061283f604b913960600191505060405180910390a161078e565b7fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252603581526020018061280a6035913960400191505060405180910390a160006106ce6040518060400160405280600381526020017f55524c000000000000000000000000000000000000000000000000000000000081525060405180606001604052806040815260200161294e604091396115dd565b905060016009600083815260200190815260200160002060006101000a81548160ff021916908315150217905550604051806020016040528060028081111561071357fe5b8152506008600083815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600281111561074d57fe5b02179055509050507fba5c08e7ca16d504b0119b4b9e09b27a571d73bf338d327cfbbe54b0b55ff88d816040518082815260200191505060405180910390a1505b565b3073ffffffffffffffffffffffffffffffffffffffff16316107e66040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506111f8565b111561083c577fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252604b81526020018061283f604b913960600191505060405180910390a16109a1565b7fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252603581526020018061280a6035913960400191505060405180910390a160006108e06040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506040518060600160405280604081526020016129cf604091396115dd565b905060016009600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060405180602001604052806001600281111561092657fe5b8152506008600083815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600281111561096057fe5b02179055509050507fba5c08e7ca16d504b0119b4b9e09b27a571d73bf338d327cfbbe54b0b55ff88d816040518082815260200191505060405180910390a1505b565b60075481565b60055481565b3073ffffffffffffffffffffffffffffffffffffffff1631610a056040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506111f8565b1115610a5b577fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252604b81526020018061283f604b913960600191505060405180910390a1610bda565b7fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252603581526020018061280a6035913960400191505060405180910390a16000610b196040518060400160405280600381526020017f55524c000000000000000000000000000000000000000000000000000000000081525060405180608001604052806041815260200161298e6041913960405180610100016040528060c4815260200161288a60c49139611b94565b905060016009600083815260200190815260200160002060006101000a81548160ff021916908315150217905550604051806020016040528060006002811115610b5f57fe5b8152506008600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115610b9957fe5b02179055509050507fba5c08e7ca16d504b0119b4b9e09b27a571d73bf338d327cfbbe54b0b55ff88d816040518082815260200191505060405180910390a1505b565b60065481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610c6a57506000610c68600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121b9565b145b15610c7b57610c7960006121c4565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d0157600080fd5b505af1158015610d15573d6000803e3d6000fd5b505050506040513d6020811015610d2b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e9057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610e1557600080fd5b505af1158015610e29573d6000803e3d6000fd5b505050506040513d6020811015610e3f57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f1557600080fd5b505af1158015610f29573d6000803e3d6000fd5b505050506040513d6020811015610f3f57600080fd5b8101908080519060200190929190505050905090565b6000610f62826000610f69565b9050919050565b600060608390506000809050600080905060008090505b83518110156111d9576030848281518110610f9757fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff16101580156110915750603984828151811061101e57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1611155b156111425781156110b45760008614156110aa576111d9565b8580600190039650505b600a8302925060308482815181106110c857fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1603830192506111cc565b602e84828151811061115057fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1614156111cb57600191505b5b8080600101915050610f80565b5060008511156111ec5784600a0a820291505b81935050505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806112805750600061127e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121b9565b145b156112915761128f60006121c4565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561131757600080fd5b505af115801561132b573d6000803e3d6000fd5b505050506040513d602081101561134157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114a657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561142b57600080fd5b505af115801561143f573d6000803e3d6000fd5b505050506040513d602081101561145557600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561154f578082015181840152602081019050611534565b50505050905090810190601f16801561157c5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561159b57600080fd5b505af11580156115af573d6000803e3d6000fd5b505050506040513d60208110156115c557600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061166557506000611663600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121b9565b145b156116765761167460006121c4565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156116fc57600080fd5b505af1158015611710573d6000803e3d6000fd5b505050506040513d602081101561172657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461188b57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561181057600080fd5b505af1158015611824573d6000803e3d6000fd5b505050506040513d602081101561183a57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561193657808201518184015260208101905061191b565b50505050905090810190601f1680156119635780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561198257600080fd5b505af1158015611996573d6000803e3d6000fd5b505050506040513d60208110156119ac57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156119e3576000600102915050611b8e565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015611a9a578082015181840152602081019050611a7f565b50505050905090810190601f168015611ac75780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015611b00578082015181840152602081019050611ae5565b50505050905090810190601f168015611b2d5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015611b4e57600080fd5b505af1158015611b62573d6000803e3d6000fd5b50505050506040513d6020811015611b7957600080fd5b81019080805190602001909291905050509150505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611c1c57506000611c1a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121b9565b145b15611c2d57611c2b60006121c4565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611cb357600080fd5b505af1158015611cc7573d6000803e3d6000fd5b505050506040513d6020811015611cdd57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e4257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611dc757600080fd5b505af1158015611ddb573d6000803e3d6000fd5b505050506040513d6020811015611df157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611eed578082015181840152602081019050611ed2565b50505050905090810190601f168015611f1a5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015611f3957600080fd5b505af1158015611f4d573d6000803e3d6000fd5b505050506040513d6020811015611f6357600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115611f9a5760006001029150506121b2565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663772286598260008888886040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561205657808201518184015260208101905061203b565b50505050905090810190601f1680156120835780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b838110156120bc5780820151818401526020810190506120a1565b50505050905090810190601f1680156120e95780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015612122578082015181840152602081019050612107565b50505050905090810190601f16801561214f5780820380516001836020036101000a031916815260200191505b509750505050505050506020604051808303818588803b15801561217257600080fd5b505af1158015612186573d6000803e3d6000fd5b50505050506040513d602081101561219d57600080fd5b81019080805190602001909291905050509150505b9392505050565b6000813b9050919050565b60006121ce6121d5565b9050919050565b6000806121f5731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6121b9565b111561229757731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061228e6040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525061272c565b60019050612729565b60006122b673c03a2615d5efaf5f49f60b7bb6583eaec212fdf16121b9565b11156123585773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061234f6040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525061272c565b60019050612729565b600061237773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6121b9565b11156124195773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124106040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525061272c565b60019050612729565b600061243873146500cfd35b22e4a392fe0adc06de1a1368ed486121b9565b11156124da5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124d16040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525061272c565b60019050612729565b60006124f973a2998efd205fb9d4b4963afb70778d6354ad3a416121b9565b111561259b5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125926040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525061272c565b60019050612729565b60006125ba736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756121b9565b111561261e57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612729565b600061263d7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6121b9565b11156126a1577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612729565b60006126c07351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6121b9565b1115612724577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612729565b600090505b90565b8060029080519060200190612742929190612764565b5050565b60405180602001604052806000600281111561275e57fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106127a557805160ff19168380011785556127d3565b828001600101855582156127d3579182015b828111156127d25782518255916020019190600101906127b7565b5b5090506127e091906127e4565b5090565b61280691905b808211156128025760008160009055506001016127ea565b5090565b9056fe50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f7220746865207175657279206665650a7b226a736f6e727063223a2022322e30222c20226d6574686f64223a202267656e65726174655369676e6564496e746567657273222c2022706172616d73223a207b20226170694b6579223a202230303030303030302d303030302d303030302d303030302d303030303030303030303030222c20226e223a20312c20226d696e223a20312c20226d6178223a203130302c20227265706c6163656d656e74223a20747275652c202262617365223a203130207d2c20226964223a203134323135207d6a736f6e2868747470733a2f2f6170692e70726f2e636f696e626173652e636f6d2f70726f64756374732f4254432d5553442f7469636b6572292e70726963656a736f6e2868747470733a2f2f6170692e72616e646f6d2e6f72672f6a736f6e2d7270632f322f696e766f6b65292e726573756c742e72616e646f6d2e646174616a736f6e2868747470733a2f2f6170692e70726f2e636f696e626173652e636f6d2f70726f64756374732f4554482d5553442f7469636b6572292e7072696365a2646970667358221220962f62eaa244f4fbe95d01be2d8b4a0f18d8e565e0b4d3dba07de2a151f4c41f64736f6c63430006060033",
  "sourceMap": "71:5156:1:-:0;;;1592:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;71:5156;;;;;;",
  "deployedSourceMap": "71:5156:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1695:1261:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1695:1261:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1695:1261:1;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;1695:1261:1;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1695:1261:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1695:1261:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1695:1261:1;;;;;;;;;;;;;;;:::i;:::-;;15884:189:2;;5:9:-1;2:2;;;27:1;24;17:12;2:2;15884:189:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;15884:189:2;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;15884:189:2;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;15884:189:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15884:189:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15884:189:2;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;15884:189:2;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;15884:189:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15884:189:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15884:189:2;;;;;;;;;;;;;;;:::i;:::-;;4549:673:1;;;:::i;:::-;;3868;;;:::i;:::-;;175:20;;5:9:-1;2:2;;;27:1;24;17:12;2:2;175:20:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;117:24;;5:9:-1;2:2;;;27:1;24;17:12;2:2;117:24:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2966:892;;;:::i;:::-;;148:20;;5:9:-1;2:2;;;27:1;24;17:12;2:2;148:20:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1695:1261;1810:20;:18;:20::i;:::-;1796:34;;:10;:34;;;1788:43;;12:1:-1;9;2:12;1788:43:1;1850:8;:15;1859:5;1850:15;;;;;;;;;;;;;;;;;;;;;1842:24;;12:1:-1;9;2:12;1842:24:1;1953:26;;:::i;:::-;1982:17;:24;2000:5;1982:24;;;;;;;;;;;1953:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2033:20;2020:33;;;;;;;;:2;:9;;;:33;;;;;;;;;2017:220;;;2170:17;2179:7;2170:8;:17::i;:::-;2155:12;:32;;;;2220:5;2202:8;:15;2211:5;2202:15;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;2017:220;2265:22;2252:35;;;;;;;;:2;:9;;;:35;;;;;;;;;2249:221;;;2400:20;2409:7;2418:1;2400:8;:20::i;:::-;2389:8;:31;;;;2453:5;2435:8;:15;2444:5;2435:15;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;2249:221;2498:22;2485:35;;;;;;;;:2;:9;;;:35;;;;;;;;;2482:221;;;2633:20;2642:7;2651:1;2633:8;:20::i;:::-;2622:8;:31;;;;2686:5;2668:8;:15;2677:5;2668:15;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;2482:221;1695:1261;;;:::o;15884:189:2:-;16063:1;16055:10;;16018:22;:34;16049:1;16041:10;;16018:34;;;;;;;;;;;:47;;;;15884:189;;;:::o;4549:673:1:-;4637:4;4629:21;;;4602:24;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;4598:615;;;4672:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4598:615;;;4808:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:11;4913:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:138::i;:::-;4899:152;;5082:4;5066:8;:13;5075:3;5066:13;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;5126:40;;;;;;;;5143:22;5126:40;;;;;;;;;;;5101:17;:22;5119:3;5101:22;;;;;;;;;;;:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5186:15;5197:3;5186:15;;;;;;;;;;;;;;;;;;4598:615;;4549:673::o;3868:::-;3956:4;3948:21;;;3921:24;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;3917:615;;;3991:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3917:615;;;4127:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4218:11;4232:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:138::i;:::-;4218:152;;4401:4;4385:8;:13;4394:3;4385:13;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;4445:40;;;;;;;;4462:22;4445:40;;;;;;;;;;;4420:17;:22;4438:3;4420:22;;;;;;;;;;;:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4505:15;4516:3;4505:15;;;;;;;;;;;;;;;;;;3917:615;;3868:673::o;175:20::-;;;;:::o;117:24::-;;;;:::o;2966:892::-;3058:4;3050:21;;;3023:24;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;3019:832;;;3093:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3019:832;;;3229:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3320:11;3334:357;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:357::i;:::-;3320:371;;3722:4;3706:8;:13;3715:3;3706:13;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;3766:38;;;;;;;;3783:20;3766:38;;;;;;;;;;;3741:17;:22;3759:3;3741:22;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3824:15;3835:3;3824:15;;;;;;;;;;;;;;;;;;3019:832;;2966:892::o;148:20::-;;;;:::o;38114:132:2:-;38174:24;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12351:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12351:16:2;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12405:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12405:16:2;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38218:8:::1;::::0;::::1;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;38218:20:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;38218:20:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;38218:20:2;;;;;;;;;;;;;;;;38211:27;;38114:132:::0;:::o;43975:117::-;44034:15;44069;44078:2;44082:1;44069:8;:15::i;:::-;44062:22;;43975:117;;;:::o;44100:819::-;44168:15;44196:20;44225:2;44196:32;;44239:9;44251:1;44239:13;;44263;44279:5;44263:21;;44300:6;44309:1;44300:10;;44295:530;44316:7;:14;44312:1;:18;44295:530;;;44384:2;44368:7;44376:1;44368:10;;;;;;;;;;;;;;;;;44362:17;;;44357:23;;:29;;44356:66;;;;;44419:2;44403:7;44411:1;44403:10;;;;;;;;;;;;;;;;;44397:17;;;44392:23;;:29;;44356:66;44352:462;;;44447:8;44443:181;;;44489:1;44483:2;:7;44479:126;;;44518:5;;44479:126;44578:4;;;;;;;;44443:181;44650:2;44642:10;;;;44705:2;44690:7;44698:1;44690:10;;;;;;;;;;;;;;;;;44684:17;;;44679:23;;:28;44671:36;;;;44352:462;;;44760:2;44744:7;44752:1;44744:10;;;;;;;;;;;;;;;;;44738:17;;;44733:23;;:29;44729:85;;;44794:4;44783:15;;44729:85;44352:462;44332:3;;;;;;;44295:530;;;;44844:1;44839:2;:6;44835:55;;;44876:2;44870;:8;44862:16;;;;44835:55;44907:4;44900:11;;;;;44100:819;;;;:::o;16081:158::-;16165:16;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12351:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12351:16:2;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12405:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12405:16:2;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;16201:8:::1;::::0;::::1;;;;;;;;;:17;;;16219:11;16201:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16201:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;16201:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;16201:30:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;16201:30:2;;;;;;;;;;;;;;;;16194:37;;16081:158:::0;;;:::o;16440:360::-;16541:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12351:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12351:16:2;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12405:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12405:16:2;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;16565:10:::1;16578:8:::0;::::1;;;;;;;;;;:17;;;16596:11;16578:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16578:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;16578:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;16578:30:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;16578:30:2;;;;;;;;;;;;;;;;16565:43;;16655:6;16641:11;:20;16631:7;:30;16623:5;:38;16619:106;;;16685:1;16678:8;;;;;;;16619:106;16742:8;::::0;::::1;;;;;;;;;:14;;;16764:5;16771:1;16774:11;16787:4;16742:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16742:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16742:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;16742:50:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;16742:50:2;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;16742:50:2;;;;;;;;;;;;;;;;16735:57;;;12444:1;16440:360:::0;;;;:::o;18070:391::-;18193:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12351:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12351:16:2;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12405:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12405:16:2;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;18217:10:::1;18230:8:::0;::::1;;;;;;;;;;:17;;;18248:11;18230:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;18230:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;18230:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;18230:30:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;18230:30:2;;;;;;;;;;;;;;;;18217:43;;18307:6;18293:11;:20;18283:7;:30;18275:5;:38;18271:106;;;18337:1;18330:8;;;;;;;18271:106;18394:8;::::0;::::1;;;;;;;;;:15;;;18417:5;18424:1;18427:11;18440:5;18447;18394:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;18394:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;18394:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;18394:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;18394:59:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;18394:59:2;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;18394:59:2;;;;;;;;;;;;;;;;18387:66;;;12444:1;18070:391:::0;;;;;:::o;38254:151::-;38313:10;38381:5;38369:18;38360:27;;38345:53;;;:::o;12938:208::-;13003:16;13117:21;:19;:21::i;:::-;13110:28;;12938:208;;;:::o;13430:2070::-;13479:16;13570:1;13512:55;13524:42;13512:11;:55::i;:::-;:59;13508:250;;;13624:42;13598:3;;:69;;;;;;;;;;;;;;;;;;13682:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13742:4;13735:11;;;;13508:250;13830:1;13772:55;13784:42;13772:11;:55::i;:::-;:59;13768:259;;;13892:42;13866:3;;:69;;;;;;;;;;;;;;;;;;13950:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;14011:4;14004:11;;;;13768:259;14099:1;14041:55;14053:42;14041:11;:55::i;:::-;:59;14037:254;;;14159:42;14133:3;;:69;;;;;;;;;;;;;;;;;;14217:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14275:4;14268:11;;;;14037:254;14363:1;14305:55;14317:42;14305:11;:55::i;:::-;:59;14301:258;;;14425:42;14399:3;;:69;;;;;;;;;;;;;;;;;;14483:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14543:4;14536:11;;;;14301:258;14631:1;14573:55;14585:42;14573:11;:55::i;:::-;:59;14569:256;;;14692:42;14666:3;;:69;;;;;;;;;;;;;;;;;;14750:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14809:4;14802:11;;;;14569:256;14897:1;14839:55;14851:42;14839:11;:55::i;:::-;:59;14835:205;;;14959:42;14933:3;;:69;;;;;;;;;;;;;;;;;;15024:4;15017:11;;;;14835:205;15112:1;15054:55;15066:42;15054:11;:55::i;:::-;:59;15050:204;;;15173:42;15147:3;;:69;;;;;;;;;;;;;;;;;;15238:4;15231:11;;;;15050:204;15326:1;15268:55;15280:42;15268:11;:55::i;:::-;:59;15264:206;;;15389:42;15363:3;;:69;;;;;;;;;;;;;;;;;;15454:4;15447:11;;;;15264:206;15487:5;15480:12;;13430:2070;;:::o;13154:127::-;13260:13;13236:21;:37;;;;;;;;;;;;:::i;:::-;;13154:127;:::o;71:5156:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity > 0.6.1 < 0.7.0;\r\n\r\nimport \"./provableAPI_0.6.sol\";\r\n\r\ncontract OracleTest is usingProvable {\r\n\r\n    uint public randomNumber;\r\n    uint public ethPrice;\r\n    uint public btcPrice;\r\n\r\n    enum oraclizeState { random, ethprice, btcprice }\r\n\r\n    struct oraclizeCallback {\r\n        oraclizeState oState;\r\n    }\r\n\r\n    mapping (bytes32 => oraclizeCallback) oraclizeCallbacks;\r\n    mapping(bytes32 => bool) validIds;\r\n\r\n    event LogConstructorInitiated(string message);\r\n    event LogNewProvableQuery(string description);\r\n    event LogQueryId(bytes32 queryID);\r\n    // event LogCallbackResult(string message);\r\n\r\n    // bytes32 rngId = provable_query(\r\n    //     \"nested\",\r\n    //     \"[URL] ['json(https://api.random.org/json-rpc/1/invoke).result.random[\\\"serialNumber\\\",\\\"data\\\"]', '\\\\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"generateSignedIntegers\\\",\\\"params\\\":{\\\"apiKey\\\":${[decrypt] BKg3TCs7lkzNr1kR6pxjPCM2SOejcFojUPMTOsBkC/47HHPf1sP2oxVLTjNBu+slR9SgZyqDtjVOV5Yzg12iUkbubp0DpcjCEdeJTHnGwC6gD729GUVoGvo96huxwRoZlCjYO80rWq2WGYoR/LC3WampDuvv2Bo=},\\\"n\\\":1,\\\"min\\\":1,\\\"max\\\":100,\\\"replacement\\\":true,\\\"base\\\":10${[identity] \\\"}\\\"},\\\"id\\\":1${[identity] \\\"}\\\"}']\",\r\n    //     gasForOracalize\r\n    // );\r\n\r\n    // GAS problems\r\n    // strConcat('\\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"5e53c82d-bdc9-4a29-aa27-0eac7f754c3a\", \"n\": 1, \"min\":', _min ,', \"max\":', _max ,', \"replacement\": true, \"base\": 10 }, \"id\": 14215 }')\r\n\r\n    constructor() payable public {\r\n        // provable_setProof(proofType_TLSNotary | proofStorage_IPFS);\r\n        emit LogConstructorInitiated(\"Constructor was initiated. Ready to send the Provable Query.\");\r\n    }\r\n\r\n    function __callback(bytes32 _myId, string memory _result) virtual public override {\r\n        require(msg.sender == provable_cbAddress());\r\n        require(validIds[_myId]);\r\n        // emit LogCallbackResult('Callback called, Result is ready');\r\n\r\n\r\n        oraclizeCallback memory OC = oraclizeCallbacks[_myId];\r\n        if(OC.oState == oraclizeState.random) {\r\n            // emit LogCallbackResult('Callback called, Result is ready', _result);\r\n            randomNumber = parseInt(_result);\r\n            validIds[_myId] = false;\r\n        }\r\n\r\n        if(OC.oState == oraclizeState.ethprice) {\r\n            // emit LogCallbackResult('Callback called, Result is ready', _result);\r\n            ethPrice = parseInt(_result, 2);\r\n            validIds[_myId] = false;\r\n        }\r\n\r\n        if(OC.oState == oraclizeState.btcprice) {\r\n            // emit LogCallbackResult('Callback called, Result is ready', _result);\r\n            btcPrice = parseInt(_result, 2);\r\n            validIds[_myId] = false;\r\n        }\r\n        //Using delete on an array leaves a gap. The length of the array remains the same. If you want to remove the empty position\r\n        // you need to shift items manually and update the length property.\r\n        // delete validIds[_myId];\r\n    }\r\n\r\n\r\n    function getRandomNumber() payable public {\r\n        if (provable_getPrice(\"URL\") > address(this).balance) {\r\n            emit LogNewProvableQuery(\"Provable query was NOT sent, please add some ETH to cover for the query fee\");\r\n        } else {\r\n            emit LogNewProvableQuery(\"Provable query was sent, standing by for the answer..\");\r\n            bytes32 _id = provable_query(\r\n                \"URL\",\r\n                'json(https://api.random.org/json-rpc/2/invoke).result.random.data',\r\n                '\\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"00000000-0000-0000-0000-000000000000\", \"n\": 1, \"min\": 1, \"max\": 100, \"replacement\": true, \"base\": 10 }, \"id\": 14215 }'\r\n            );\r\n            validIds[_id] = true;\r\n            oraclizeCallbacks[_id] = oraclizeCallback(oraclizeState.random);\r\n            emit LogQueryId(_id);\r\n        }\r\n    }\r\n\r\n\r\n    function getEthPrice() payable public {\r\n        if (provable_getPrice(\"URL\") > address(this).balance) {\r\n            emit LogNewProvableQuery(\"Provable query was NOT sent, please add some ETH to cover for the query fee\");\r\n        } else {\r\n            emit LogNewProvableQuery(\"Provable query was sent, standing by for the answer..\");\r\n            bytes32 _id = provable_query(\r\n                \"URL\",\r\n                'json(https://api.pro.coinbase.com/products/ETH-USD/ticker).price'\r\n            );\r\n            validIds[_id] = true;\r\n            oraclizeCallbacks[_id] = oraclizeCallback(oraclizeState.ethprice);\r\n            emit LogQueryId(_id);\r\n        }\r\n\r\n    }\r\n\r\n    function getBtcPrice() payable public {\r\n        if (provable_getPrice(\"URL\") > address(this).balance) {\r\n            emit LogNewProvableQuery(\"Provable query was NOT sent, please add some ETH to cover for the query fee\");\r\n        } else {\r\n            emit LogNewProvableQuery(\"Provable query was sent, standing by for the answer..\");\r\n            bytes32 _id = provable_query(\r\n                \"URL\",\r\n                'json(https://api.pro.coinbase.com/products/BTC-USD/ticker).price'\r\n            );\r\n            validIds[_id] = true;\r\n            oraclizeCallbacks[_id] = oraclizeCallback(oraclizeState.btcprice);\r\n            emit LogQueryId(_id);\r\n        }\r\n\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\Kahan Majmudar\\OneDrive\\Study\\Blockchain BTP\\Oracles\\contracts\\OracleService.sol",
  "ast": {
    "absolutePath": "/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/Oracles/contracts/OracleService.sol",
    "exportedSymbols": {
      "OracleTest": [
        322
      ]
    },
    "id": 323,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".1",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/Oracles/contracts/provableAPI_0.6.sol",
        "file": "./provableAPI_0.6.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 323,
        "sourceUnit": 6738,
        "src": "36:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 40,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6737,
              "src": "94:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6737",
                "typeString": "contract usingProvable"
              }
            },
            "id": 41,
            "nodeType": "InheritanceSpecifier",
            "src": "94:13:1"
          }
        ],
        "contractDependencies": [
          6737
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 322,
        "linearizedBaseContracts": [
          322,
          6737
        ],
        "name": "OracleTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "ccbac9f5",
            "id": 43,
            "mutability": "mutable",
            "name": "randomNumber",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 322,
            "src": "117:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "117:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ff186b2e",
            "id": 45,
            "mutability": "mutable",
            "name": "ethPrice",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 322,
            "src": "148:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "148:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8ad52d1",
            "id": 47,
            "mutability": "mutable",
            "name": "btcPrice",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 322,
            "src": "175:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "175:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "OracleTest.oraclizeState",
            "id": 51,
            "members": [
              {
                "id": 48,
                "name": "random",
                "nodeType": "EnumValue",
                "src": "225:6:1"
              },
              {
                "id": 49,
                "name": "ethprice",
                "nodeType": "EnumValue",
                "src": "233:8:1"
              },
              {
                "id": 50,
                "name": "btcprice",
                "nodeType": "EnumValue",
                "src": "243:8:1"
              }
            ],
            "name": "oraclizeState",
            "nodeType": "EnumDefinition",
            "src": "204:49:1"
          },
          {
            "canonicalName": "OracleTest.oraclizeCallback",
            "id": 54,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "oState",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 54,
                "src": "296:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                  "typeString": "enum OracleTest.oraclizeState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 52,
                  "name": "oraclizeState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 51,
                  "src": "296:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_oraclizeState_$51",
                    "typeString": "enum OracleTest.oraclizeState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "oraclizeCallback",
            "nodeType": "StructDefinition",
            "scope": 322,
            "src": "261:63:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "oraclizeCallbacks",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 322,
            "src": "332:55:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$54_storage_$",
              "typeString": "mapping(bytes32 => struct OracleTest.oraclizeCallback)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 55,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "341:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "332:37:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$54_storage_$",
                "typeString": "mapping(bytes32 => struct OracleTest.oraclizeCallback)"
              },
              "valueType": {
                "contractScope": null,
                "id": 56,
                "name": "oraclizeCallback",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 54,
                "src": "352:16:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage_ptr",
                  "typeString": "struct OracleTest.oraclizeCallback"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "mutability": "mutable",
            "name": "validIds",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 322,
            "src": "394:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "402:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "394:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 60,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "413:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 66,
            "name": "LogConstructorInitiated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 66,
                  "src": "466:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "465:16:1"
            },
            "src": "436:46:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 70,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 70,
                  "src": "514:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "513:20:1"
            },
            "src": "488:46:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 74,
            "name": "LogQueryId",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "queryID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74,
                  "src": "557:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "556:17:1"
            },
            "src": "540:34:1"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "1504:183:1",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e7374727563746f722077617320696e697469617465642e20526561647920746f2073656e64207468652050726f7661626c652051756572792e",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1616:62:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87b5614baa82f3fbdb253d374d2ebe56599f81c1d9256026abbe39b949745c9e",
                          "typeString": "literal_string \"Constructor was initiated. Ready to send the Provable Query.\""
                        },
                        "value": "Constructor was initiated. Ready to send the Provable Query."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_87b5614baa82f3fbdb253d374d2ebe56599f81c1d9256026abbe39b949745c9e",
                          "typeString": "literal_string \"Constructor was initiated. Ready to send the Provable Query.\""
                        }
                      ],
                      "id": 77,
                      "name": "LogConstructorInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1592:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1592:87:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "EmitStatement",
                  "src": "1587:92:1"
                }
              ]
            },
            "documentation": null,
            "id": 82,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1486:2:1"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1504:0:1"
            },
            "scope": 322,
            "src": "1475:212:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1369
            ],
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "1777:1179:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 91,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1796:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1796:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 93,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4491,
                            "src": "1810:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1810:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1796:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1788:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 99,
                          "name": "validIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1850:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 101,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 100,
                          "name": "_myId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "1859:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1850:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1842:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:24:1"
                },
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "mutability": "mutable",
                      "name": "OC",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 169,
                      "src": "1953:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                        "typeString": "struct OracleTest.oraclizeCallback"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 104,
                        "name": "oraclizeCallback",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 54,
                        "src": "1953:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage_ptr",
                          "typeString": "struct OracleTest.oraclizeCallback"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 109,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 106,
                      "name": "oraclizeCallbacks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "1982:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$54_storage_$",
                        "typeString": "mapping(bytes32 => struct OracleTest.oraclizeCallback storage ref)"
                      }
                    },
                    "id": 108,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 107,
                      "name": "_myId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "2000:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1982:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                      "typeString": "struct OracleTest.oraclizeCallback storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1953:53:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$51",
                      "typeString": "enum OracleTest.oraclizeState"
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "OC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "2020:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                          "typeString": "struct OracleTest.oraclizeCallback memory"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "2020:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$51",
                        "typeString": "enum OracleTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2033:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$51_$",
                          "typeString": "type(enum OracleTest.oraclizeState)"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "random",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2033:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$51",
                        "typeString": "enum OracleTest.oraclizeState"
                      }
                    },
                    "src": "2020:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 128,
                  "nodeType": "IfStatement",
                  "src": "2017:220:1",
                  "trueBody": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "2055:182:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 115,
                            "name": "randomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "2155:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 117,
                                "name": "_result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "2179:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 116,
                              "name": "parseInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                5351,
                                5477
                              ],
                              "referencedDeclaration": 5351,
                              "src": "2170:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (string memory) pure returns (uint256)"
                              }
                            },
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2170:17:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2155:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 120,
                        "nodeType": "ExpressionStatement",
                        "src": "2155:32:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 121,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "2202:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 123,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 122,
                              "name": "_myId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "2211:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2202:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2220:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2202:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 126,
                        "nodeType": "ExpressionStatement",
                        "src": "2202:23:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$51",
                      "typeString": "enum OracleTest.oraclizeState"
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "OC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "2252:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                          "typeString": "struct OracleTest.oraclizeCallback memory"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "2252:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$51",
                        "typeString": "enum OracleTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2265:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$51_$",
                          "typeString": "type(enum OracleTest.oraclizeState)"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ethprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2265:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$51",
                        "typeString": "enum OracleTest.oraclizeState"
                      }
                    },
                    "src": "2252:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 148,
                  "nodeType": "IfStatement",
                  "src": "2249:221:1",
                  "trueBody": {
                    "id": 147,
                    "nodeType": "Block",
                    "src": "2289:181:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "ethPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "2389:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 136,
                                "name": "_result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "2409:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 137,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2418:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 135,
                              "name": "parseInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                5351,
                                5477
                              ],
                              "referencedDeclaration": 5477,
                              "src": "2400:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (string memory,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2400:20:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2389:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 140,
                        "nodeType": "ExpressionStatement",
                        "src": "2389:31:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 141,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "2435:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 143,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 142,
                              "name": "_myId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "2444:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2435:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2453:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2435:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 146,
                        "nodeType": "ExpressionStatement",
                        "src": "2435:23:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$51",
                      "typeString": "enum OracleTest.oraclizeState"
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "OC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "2485:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                          "typeString": "struct OracleTest.oraclizeCallback memory"
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "2485:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$51",
                        "typeString": "enum OracleTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 151,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2498:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$51_$",
                          "typeString": "type(enum OracleTest.oraclizeState)"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "btcprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2498:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$51",
                        "typeString": "enum OracleTest.oraclizeState"
                      }
                    },
                    "src": "2485:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 168,
                  "nodeType": "IfStatement",
                  "src": "2482:221:1",
                  "trueBody": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "2522:181:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 154,
                            "name": "btcPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "2622:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 156,
                                "name": "_result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "2642:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2651:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 155,
                              "name": "parseInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                5351,
                                5477
                              ],
                              "referencedDeclaration": 5477,
                              "src": "2633:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (string memory,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2633:20:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2622:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 160,
                        "nodeType": "ExpressionStatement",
                        "src": "2622:31:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 161,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "2668:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 163,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 162,
                              "name": "_myId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "2677:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2668:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2686:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2668:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 166,
                        "nodeType": "ExpressionStatement",
                        "src": "2668:23:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "27dc297e",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 88,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1768:8:1"
            },
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_myId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 170,
                  "src": "1715:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 170,
                  "src": "1730:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1714:38:1"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1777:0:1"
            },
            "scope": 322,
            "src": "1695:1261:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "3008:850:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3041:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 173,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1412,
                          1430
                        ],
                        "referencedDeclaration": 1412,
                        "src": "3023:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3023:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 178,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3058:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OracleTest_$322",
                              "typeString": "contract OracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OracleTest_$322",
                              "typeString": "contract OracleTest"
                            }
                          ],
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3050:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 176,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3050:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3050:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3050:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3023:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "3209:642:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3249:55:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2065be296ebbccebc46412f7159bc89bcf66eb3460a5e402185360bc8cae0361",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer..\""
                              },
                              "value": "Provable query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2065be296ebbccebc46412f7159bc89bcf66eb3460a5e402185360bc8cae0361",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 187,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3229:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3229:76:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 190,
                        "nodeType": "EmitStatement",
                        "src": "3224:81:1"
                      },
                      {
                        "assignments": [
                          192
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 192,
                            "mutability": "mutable",
                            "name": "_id",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 218,
                            "src": "3320:11:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 191,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3320:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 198,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3367:5:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e72616e646f6d2e6f72672f6a736f6e2d7270632f322f696e766f6b65292e726573756c742e72616e646f6d2e64617461",
                              "id": 195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3391:67:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d480c691b1da0bcfaae926d395720e1ba06200da708a9b0f81e136ae6fe749ac",
                                "typeString": "literal_string \"json(https://api.random.org/json-rpc/2/invoke).result.random.data\""
                              },
                              "value": "json(https://api.random.org/json-rpc/2/invoke).result.random.data"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "0a7b226a736f6e727063223a2022322e30222c20226d6574686f64223a202267656e65726174655369676e6564496e746567657273222c2022706172616d73223a207b20226170694b6579223a202230303030303030302d303030302d303030302d303030302d303030303030303030303030222c20226e223a20312c20226d696e223a20312c20226d6178223a203130302c20227265706c6163656d656e74223a20747275652c202262617365223a203130207d2c20226964223a203134323135207d",
                              "id": 196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3477:199:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_40307c6524372c0292a6bffd45e7ef59c7d3f2fc74dc8b7d3fd069776d71a670",
                                "typeString": "literal_string \"\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"00000000-0000-0000-0000-000000000000\", \"n\": 1, \"min\": 1, \"max\": 100, \"replacement\": true, \"base\": 10 }, \"id\": 14215 }\""
                              },
                              "value": "\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"00000000-0000-0000-0000-000000000000\", \"n\": 1, \"min\": 1, \"max\": 100, \"replacement\": true, \"base\": 10 }, \"id\": 14215 }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d480c691b1da0bcfaae926d395720e1ba06200da708a9b0f81e136ae6fe749ac",
                                "typeString": "literal_string \"json(https://api.random.org/json-rpc/2/invoke).result.random.data\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_40307c6524372c0292a6bffd45e7ef59c7d3f2fc74dc8b7d3fd069776d71a670",
                                "typeString": "literal_string \"\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"00000000-0000-0000-0000-000000000000\", \"n\": 1, \"min\": 1, \"max\": 100, \"replacement\": true, \"base\": 10 }, \"id\": 14215 }\""
                              }
                            ],
                            "id": 193,
                            "name": "provable_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1470,
                              1512,
                              1558,
                              1602,
                              1645,
                              1690,
                              1739,
                              1786,
                              1833,
                              1882,
                              1935,
                              1986,
                              2024,
                              2065,
                              2109,
                              2150,
                              2196,
                              2245,
                              2297,
                              2346,
                              2400,
                              2457,
                              2517,
                              2574,
                              2636,
                              2701,
                              2769,
                              2834,
                              2904,
                              2977,
                              3053,
                              3126,
                              3173,
                              3222,
                              3275,
                              3326,
                              3364,
                              3405,
                              3449,
                              3490,
                              3536,
                              3585,
                              3637,
                              3686,
                              3740,
                              3797,
                              3857,
                              3914,
                              3976,
                              4041,
                              4109,
                              4174,
                              4244,
                              4317,
                              4393,
                              4466
                            ],
                            "referencedDeclaration": 1645,
                            "src": "3334:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3334:357:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3320:371:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 199,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "3706:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 201,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 200,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "3715:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3706:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3722:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3706:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 204,
                        "nodeType": "ExpressionStatement",
                        "src": "3706:20:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 205,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "3741:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$54_storage_$",
                                "typeString": "mapping(bytes32 => struct OracleTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 207,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 206,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "3759:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3741:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                              "typeString": "struct OracleTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 209,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "3783:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$51_$",
                                    "typeString": "type(enum OracleTest.oraclizeState)"
                                  }
                                },
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "random",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3783:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                                  "typeString": "enum OracleTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                                  "typeString": "enum OracleTest.oraclizeState"
                                }
                              ],
                              "id": 208,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "3766:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$54_storage_ptr_$",
                                "typeString": "type(struct OracleTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3766:38:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                              "typeString": "struct OracleTest.oraclizeCallback memory"
                            }
                          },
                          "src": "3741:63:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                            "typeString": "struct OracleTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 213,
                        "nodeType": "ExpressionStatement",
                        "src": "3741:63:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 215,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "3835:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 214,
                            "name": "LogQueryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "3824:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3824:15:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 217,
                        "nodeType": "EmitStatement",
                        "src": "3819:20:1"
                      }
                    ]
                  },
                  "id": 219,
                  "nodeType": "IfStatement",
                  "src": "3019:832:1",
                  "trueBody": {
                    "id": 186,
                    "nodeType": "Block",
                    "src": "3073:130:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3113:77:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Provable query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 182,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3093:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3093:98:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "EmitStatement",
                        "src": "3088:103:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dbdff2c1",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2990:2:1"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3008:0:1"
            },
            "scope": 322,
            "src": "2966:892:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "3906:635:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3939:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 224,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1412,
                          1430
                        ],
                        "referencedDeclaration": 1412,
                        "src": "3921:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3921:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 229,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3956:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OracleTest_$322",
                              "typeString": "contract OracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OracleTest_$322",
                              "typeString": "contract OracleTest"
                            }
                          ],
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3948:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 227,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3948:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3948:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3948:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3921:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 268,
                    "nodeType": "Block",
                    "src": "4107:425:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4147:55:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2065be296ebbccebc46412f7159bc89bcf66eb3460a5e402185360bc8cae0361",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer..\""
                              },
                              "value": "Provable query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2065be296ebbccebc46412f7159bc89bcf66eb3460a5e402185360bc8cae0361",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 238,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "4127:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4127:76:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 241,
                        "nodeType": "EmitStatement",
                        "src": "4122:81:1"
                      },
                      {
                        "assignments": [
                          243
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 243,
                            "mutability": "mutable",
                            "name": "_id",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 268,
                            "src": "4218:11:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 242,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4218:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 248,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4265:5:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e70726f2e636f696e626173652e636f6d2f70726f64756374732f4554482d5553442f7469636b6572292e7072696365",
                              "id": 246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4289:66:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e55baa631f447cda815800145fbb5f2039aa2d2170415b6fb5c678671318580b",
                                "typeString": "literal_string \"json(https://api.pro.coinbase.com/products/ETH-USD/ticker).price\""
                              },
                              "value": "json(https://api.pro.coinbase.com/products/ETH-USD/ticker).price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e55baa631f447cda815800145fbb5f2039aa2d2170415b6fb5c678671318580b",
                                "typeString": "literal_string \"json(https://api.pro.coinbase.com/products/ETH-USD/ticker).price\""
                              }
                            ],
                            "id": 244,
                            "name": "provable_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1470,
                              1512,
                              1558,
                              1602,
                              1645,
                              1690,
                              1739,
                              1786,
                              1833,
                              1882,
                              1935,
                              1986,
                              2024,
                              2065,
                              2109,
                              2150,
                              2196,
                              2245,
                              2297,
                              2346,
                              2400,
                              2457,
                              2517,
                              2574,
                              2636,
                              2701,
                              2769,
                              2834,
                              2904,
                              2977,
                              3053,
                              3126,
                              3173,
                              3222,
                              3275,
                              3326,
                              3364,
                              3405,
                              3449,
                              3490,
                              3536,
                              3585,
                              3637,
                              3686,
                              3740,
                              3797,
                              3857,
                              3914,
                              3976,
                              4041,
                              4109,
                              4174,
                              4244,
                              4317,
                              4393,
                              4466
                            ],
                            "referencedDeclaration": 1470,
                            "src": "4232:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4232:138:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4218:152:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 249,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "4385:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 251,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 250,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "4394:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4385:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4401:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4385:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 254,
                        "nodeType": "ExpressionStatement",
                        "src": "4385:20:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 255,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "4420:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$54_storage_$",
                                "typeString": "mapping(bytes32 => struct OracleTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 257,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 256,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "4438:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4420:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                              "typeString": "struct OracleTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 259,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "4462:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$51_$",
                                    "typeString": "type(enum OracleTest.oraclizeState)"
                                  }
                                },
                                "id": 260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ethprice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4462:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                                  "typeString": "enum OracleTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                                  "typeString": "enum OracleTest.oraclizeState"
                                }
                              ],
                              "id": 258,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "4445:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$54_storage_ptr_$",
                                "typeString": "type(struct OracleTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4445:40:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                              "typeString": "struct OracleTest.oraclizeCallback memory"
                            }
                          },
                          "src": "4420:65:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                            "typeString": "struct OracleTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 263,
                        "nodeType": "ExpressionStatement",
                        "src": "4420:65:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 265,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "4516:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 264,
                            "name": "LogQueryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "4505:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4505:15:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 267,
                        "nodeType": "EmitStatement",
                        "src": "4500:20:1"
                      }
                    ]
                  },
                  "id": 269,
                  "nodeType": "IfStatement",
                  "src": "3917:615:1",
                  "trueBody": {
                    "id": 237,
                    "nodeType": "Block",
                    "src": "3971:130:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4011:77:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Provable query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 233,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3991:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3991:98:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 236,
                        "nodeType": "EmitStatement",
                        "src": "3986:103:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "67c9b017",
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3888:2:1"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3906:0:1"
            },
            "scope": 322,
            "src": "3868:673:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "4587:635:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4620:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 274,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1412,
                          1430
                        ],
                        "referencedDeclaration": 1412,
                        "src": "4602:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4602:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 279,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4637:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OracleTest_$322",
                              "typeString": "contract OracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OracleTest_$322",
                              "typeString": "contract OracleTest"
                            }
                          ],
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4629:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 277,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4629:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4629:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4629:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4602:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 318,
                    "nodeType": "Block",
                    "src": "4788:425:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4828:55:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2065be296ebbccebc46412f7159bc89bcf66eb3460a5e402185360bc8cae0361",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer..\""
                              },
                              "value": "Provable query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2065be296ebbccebc46412f7159bc89bcf66eb3460a5e402185360bc8cae0361",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 288,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "4808:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4808:76:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 291,
                        "nodeType": "EmitStatement",
                        "src": "4803:81:1"
                      },
                      {
                        "assignments": [
                          293
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 293,
                            "mutability": "mutable",
                            "name": "_id",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 318,
                            "src": "4899:11:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 292,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4899:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 298,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4946:5:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e70726f2e636f696e626173652e636f6d2f70726f64756374732f4254432d5553442f7469636b6572292e7072696365",
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4970:66:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7f39437c861025fe0bac7e3f737f0d5f4f367caa7c7a12ff4d7be67d2def7360",
                                "typeString": "literal_string \"json(https://api.pro.coinbase.com/products/BTC-USD/ticker).price\""
                              },
                              "value": "json(https://api.pro.coinbase.com/products/BTC-USD/ticker).price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7f39437c861025fe0bac7e3f737f0d5f4f367caa7c7a12ff4d7be67d2def7360",
                                "typeString": "literal_string \"json(https://api.pro.coinbase.com/products/BTC-USD/ticker).price\""
                              }
                            ],
                            "id": 294,
                            "name": "provable_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1470,
                              1512,
                              1558,
                              1602,
                              1645,
                              1690,
                              1739,
                              1786,
                              1833,
                              1882,
                              1935,
                              1986,
                              2024,
                              2065,
                              2109,
                              2150,
                              2196,
                              2245,
                              2297,
                              2346,
                              2400,
                              2457,
                              2517,
                              2574,
                              2636,
                              2701,
                              2769,
                              2834,
                              2904,
                              2977,
                              3053,
                              3126,
                              3173,
                              3222,
                              3275,
                              3326,
                              3364,
                              3405,
                              3449,
                              3490,
                              3536,
                              3585,
                              3637,
                              3686,
                              3740,
                              3797,
                              3857,
                              3914,
                              3976,
                              4041,
                              4109,
                              4174,
                              4244,
                              4317,
                              4393,
                              4466
                            ],
                            "referencedDeclaration": 1470,
                            "src": "4913:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4913:138:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4899:152:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 299,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "5066:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 301,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 300,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "5075:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5066:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5082:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5066:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 304,
                        "nodeType": "ExpressionStatement",
                        "src": "5066:20:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 305,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "5101:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$54_storage_$",
                                "typeString": "mapping(bytes32 => struct OracleTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 307,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 306,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "5119:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5101:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                              "typeString": "struct OracleTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 309,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "5143:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$51_$",
                                    "typeString": "type(enum OracleTest.oraclizeState)"
                                  }
                                },
                                "id": 310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "btcprice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5143:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                                  "typeString": "enum OracleTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                                  "typeString": "enum OracleTest.oraclizeState"
                                }
                              ],
                              "id": 308,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "5126:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$54_storage_ptr_$",
                                "typeString": "type(struct OracleTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5126:40:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                              "typeString": "struct OracleTest.oraclizeCallback memory"
                            }
                          },
                          "src": "5101:65:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                            "typeString": "struct OracleTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 313,
                        "nodeType": "ExpressionStatement",
                        "src": "5101:65:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 315,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "5197:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 314,
                            "name": "LogQueryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "5186:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5186:15:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 317,
                        "nodeType": "EmitStatement",
                        "src": "5181:20:1"
                      }
                    ]
                  },
                  "id": 319,
                  "nodeType": "IfStatement",
                  "src": "4598:615:1",
                  "trueBody": {
                    "id": 287,
                    "nodeType": "Block",
                    "src": "4652:130:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4692:77:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Provable query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 283,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "4672:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4672:98:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 286,
                        "nodeType": "EmitStatement",
                        "src": "4667:103:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3a3610bc",
            "id": 321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4569:2:1"
            },
            "returnParameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4587:0:1"
            },
            "scope": 322,
            "src": "4549:673:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 323,
        "src": "71:5156:1"
      }
    ],
    "src": "0:5227:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/Oracles/contracts/OracleService.sol",
    "exportedSymbols": {
      "OracleTest": [
        322
      ]
    },
    "id": 323,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".1",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "/C/Users/Kahan Majmudar/OneDrive/Study/Blockchain BTP/Oracles/contracts/provableAPI_0.6.sol",
        "file": "./provableAPI_0.6.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 323,
        "sourceUnit": 6738,
        "src": "36:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 40,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6737,
              "src": "94:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6737",
                "typeString": "contract usingProvable"
              }
            },
            "id": 41,
            "nodeType": "InheritanceSpecifier",
            "src": "94:13:1"
          }
        ],
        "contractDependencies": [
          6737
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 322,
        "linearizedBaseContracts": [
          322,
          6737
        ],
        "name": "OracleTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "ccbac9f5",
            "id": 43,
            "mutability": "mutable",
            "name": "randomNumber",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 322,
            "src": "117:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "117:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ff186b2e",
            "id": 45,
            "mutability": "mutable",
            "name": "ethPrice",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 322,
            "src": "148:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "148:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8ad52d1",
            "id": 47,
            "mutability": "mutable",
            "name": "btcPrice",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 322,
            "src": "175:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "175:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "OracleTest.oraclizeState",
            "id": 51,
            "members": [
              {
                "id": 48,
                "name": "random",
                "nodeType": "EnumValue",
                "src": "225:6:1"
              },
              {
                "id": 49,
                "name": "ethprice",
                "nodeType": "EnumValue",
                "src": "233:8:1"
              },
              {
                "id": 50,
                "name": "btcprice",
                "nodeType": "EnumValue",
                "src": "243:8:1"
              }
            ],
            "name": "oraclizeState",
            "nodeType": "EnumDefinition",
            "src": "204:49:1"
          },
          {
            "canonicalName": "OracleTest.oraclizeCallback",
            "id": 54,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "oState",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 54,
                "src": "296:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                  "typeString": "enum OracleTest.oraclizeState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 52,
                  "name": "oraclizeState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 51,
                  "src": "296:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_oraclizeState_$51",
                    "typeString": "enum OracleTest.oraclizeState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "oraclizeCallback",
            "nodeType": "StructDefinition",
            "scope": 322,
            "src": "261:63:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "oraclizeCallbacks",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 322,
            "src": "332:55:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$54_storage_$",
              "typeString": "mapping(bytes32 => struct OracleTest.oraclizeCallback)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 55,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "341:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "332:37:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$54_storage_$",
                "typeString": "mapping(bytes32 => struct OracleTest.oraclizeCallback)"
              },
              "valueType": {
                "contractScope": null,
                "id": 56,
                "name": "oraclizeCallback",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 54,
                "src": "352:16:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage_ptr",
                  "typeString": "struct OracleTest.oraclizeCallback"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "mutability": "mutable",
            "name": "validIds",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 322,
            "src": "394:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "402:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "394:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 60,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "413:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 66,
            "name": "LogConstructorInitiated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 66,
                  "src": "466:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "465:16:1"
            },
            "src": "436:46:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 70,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 70,
                  "src": "514:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "513:20:1"
            },
            "src": "488:46:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 74,
            "name": "LogQueryId",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "queryID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74,
                  "src": "557:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "556:17:1"
            },
            "src": "540:34:1"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "1504:183:1",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e7374727563746f722077617320696e697469617465642e20526561647920746f2073656e64207468652050726f7661626c652051756572792e",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1616:62:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87b5614baa82f3fbdb253d374d2ebe56599f81c1d9256026abbe39b949745c9e",
                          "typeString": "literal_string \"Constructor was initiated. Ready to send the Provable Query.\""
                        },
                        "value": "Constructor was initiated. Ready to send the Provable Query."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_87b5614baa82f3fbdb253d374d2ebe56599f81c1d9256026abbe39b949745c9e",
                          "typeString": "literal_string \"Constructor was initiated. Ready to send the Provable Query.\""
                        }
                      ],
                      "id": 77,
                      "name": "LogConstructorInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1592:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1592:87:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "EmitStatement",
                  "src": "1587:92:1"
                }
              ]
            },
            "documentation": null,
            "id": 82,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1486:2:1"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1504:0:1"
            },
            "scope": 322,
            "src": "1475:212:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1369
            ],
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "1777:1179:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 91,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1796:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1796:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 93,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4491,
                            "src": "1810:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1810:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1796:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1788:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 99,
                          "name": "validIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1850:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 101,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 100,
                          "name": "_myId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "1859:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1850:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1842:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:24:1"
                },
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "mutability": "mutable",
                      "name": "OC",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 169,
                      "src": "1953:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                        "typeString": "struct OracleTest.oraclizeCallback"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 104,
                        "name": "oraclizeCallback",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 54,
                        "src": "1953:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage_ptr",
                          "typeString": "struct OracleTest.oraclizeCallback"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 109,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 106,
                      "name": "oraclizeCallbacks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "1982:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$54_storage_$",
                        "typeString": "mapping(bytes32 => struct OracleTest.oraclizeCallback storage ref)"
                      }
                    },
                    "id": 108,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 107,
                      "name": "_myId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "2000:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1982:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                      "typeString": "struct OracleTest.oraclizeCallback storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1953:53:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$51",
                      "typeString": "enum OracleTest.oraclizeState"
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "OC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "2020:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                          "typeString": "struct OracleTest.oraclizeCallback memory"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "2020:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$51",
                        "typeString": "enum OracleTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2033:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$51_$",
                          "typeString": "type(enum OracleTest.oraclizeState)"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "random",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2033:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$51",
                        "typeString": "enum OracleTest.oraclizeState"
                      }
                    },
                    "src": "2020:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 128,
                  "nodeType": "IfStatement",
                  "src": "2017:220:1",
                  "trueBody": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "2055:182:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 115,
                            "name": "randomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "2155:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 117,
                                "name": "_result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "2179:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 116,
                              "name": "parseInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                5351,
                                5477
                              ],
                              "referencedDeclaration": 5351,
                              "src": "2170:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (string memory) pure returns (uint256)"
                              }
                            },
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2170:17:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2155:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 120,
                        "nodeType": "ExpressionStatement",
                        "src": "2155:32:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 121,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "2202:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 123,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 122,
                              "name": "_myId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "2211:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2202:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2220:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2202:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 126,
                        "nodeType": "ExpressionStatement",
                        "src": "2202:23:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$51",
                      "typeString": "enum OracleTest.oraclizeState"
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "OC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "2252:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                          "typeString": "struct OracleTest.oraclizeCallback memory"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "2252:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$51",
                        "typeString": "enum OracleTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2265:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$51_$",
                          "typeString": "type(enum OracleTest.oraclizeState)"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ethprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2265:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$51",
                        "typeString": "enum OracleTest.oraclizeState"
                      }
                    },
                    "src": "2252:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 148,
                  "nodeType": "IfStatement",
                  "src": "2249:221:1",
                  "trueBody": {
                    "id": 147,
                    "nodeType": "Block",
                    "src": "2289:181:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "ethPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "2389:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 136,
                                "name": "_result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "2409:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 137,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2418:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 135,
                              "name": "parseInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                5351,
                                5477
                              ],
                              "referencedDeclaration": 5477,
                              "src": "2400:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (string memory,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2400:20:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2389:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 140,
                        "nodeType": "ExpressionStatement",
                        "src": "2389:31:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 141,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "2435:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 143,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 142,
                              "name": "_myId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "2444:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2435:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2453:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2435:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 146,
                        "nodeType": "ExpressionStatement",
                        "src": "2435:23:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$51",
                      "typeString": "enum OracleTest.oraclizeState"
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "OC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "2485:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                          "typeString": "struct OracleTest.oraclizeCallback memory"
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "2485:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$51",
                        "typeString": "enum OracleTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 151,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2498:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$51_$",
                          "typeString": "type(enum OracleTest.oraclizeState)"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "btcprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2498:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$51",
                        "typeString": "enum OracleTest.oraclizeState"
                      }
                    },
                    "src": "2485:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 168,
                  "nodeType": "IfStatement",
                  "src": "2482:221:1",
                  "trueBody": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "2522:181:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 154,
                            "name": "btcPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "2622:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 156,
                                "name": "_result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "2642:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2651:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 155,
                              "name": "parseInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                5351,
                                5477
                              ],
                              "referencedDeclaration": 5477,
                              "src": "2633:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (string memory,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2633:20:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2622:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 160,
                        "nodeType": "ExpressionStatement",
                        "src": "2622:31:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 161,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "2668:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 163,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 162,
                              "name": "_myId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "2677:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2668:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2686:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2668:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 166,
                        "nodeType": "ExpressionStatement",
                        "src": "2668:23:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "27dc297e",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 88,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1768:8:1"
            },
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_myId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 170,
                  "src": "1715:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 170,
                  "src": "1730:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1714:38:1"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1777:0:1"
            },
            "scope": 322,
            "src": "1695:1261:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "3008:850:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3041:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 173,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1412,
                          1430
                        ],
                        "referencedDeclaration": 1412,
                        "src": "3023:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3023:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 178,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3058:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OracleTest_$322",
                              "typeString": "contract OracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OracleTest_$322",
                              "typeString": "contract OracleTest"
                            }
                          ],
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3050:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 176,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3050:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3050:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3050:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3023:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "3209:642:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3249:55:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2065be296ebbccebc46412f7159bc89bcf66eb3460a5e402185360bc8cae0361",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer..\""
                              },
                              "value": "Provable query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2065be296ebbccebc46412f7159bc89bcf66eb3460a5e402185360bc8cae0361",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 187,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3229:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3229:76:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 190,
                        "nodeType": "EmitStatement",
                        "src": "3224:81:1"
                      },
                      {
                        "assignments": [
                          192
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 192,
                            "mutability": "mutable",
                            "name": "_id",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 218,
                            "src": "3320:11:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 191,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3320:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 198,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3367:5:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e72616e646f6d2e6f72672f6a736f6e2d7270632f322f696e766f6b65292e726573756c742e72616e646f6d2e64617461",
                              "id": 195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3391:67:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d480c691b1da0bcfaae926d395720e1ba06200da708a9b0f81e136ae6fe749ac",
                                "typeString": "literal_string \"json(https://api.random.org/json-rpc/2/invoke).result.random.data\""
                              },
                              "value": "json(https://api.random.org/json-rpc/2/invoke).result.random.data"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "0a7b226a736f6e727063223a2022322e30222c20226d6574686f64223a202267656e65726174655369676e6564496e746567657273222c2022706172616d73223a207b20226170694b6579223a202230303030303030302d303030302d303030302d303030302d303030303030303030303030222c20226e223a20312c20226d696e223a20312c20226d6178223a203130302c20227265706c6163656d656e74223a20747275652c202262617365223a203130207d2c20226964223a203134323135207d",
                              "id": 196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3477:199:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_40307c6524372c0292a6bffd45e7ef59c7d3f2fc74dc8b7d3fd069776d71a670",
                                "typeString": "literal_string \"\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"00000000-0000-0000-0000-000000000000\", \"n\": 1, \"min\": 1, \"max\": 100, \"replacement\": true, \"base\": 10 }, \"id\": 14215 }\""
                              },
                              "value": "\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"00000000-0000-0000-0000-000000000000\", \"n\": 1, \"min\": 1, \"max\": 100, \"replacement\": true, \"base\": 10 }, \"id\": 14215 }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d480c691b1da0bcfaae926d395720e1ba06200da708a9b0f81e136ae6fe749ac",
                                "typeString": "literal_string \"json(https://api.random.org/json-rpc/2/invoke).result.random.data\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_40307c6524372c0292a6bffd45e7ef59c7d3f2fc74dc8b7d3fd069776d71a670",
                                "typeString": "literal_string \"\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"00000000-0000-0000-0000-000000000000\", \"n\": 1, \"min\": 1, \"max\": 100, \"replacement\": true, \"base\": 10 }, \"id\": 14215 }\""
                              }
                            ],
                            "id": 193,
                            "name": "provable_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1470,
                              1512,
                              1558,
                              1602,
                              1645,
                              1690,
                              1739,
                              1786,
                              1833,
                              1882,
                              1935,
                              1986,
                              2024,
                              2065,
                              2109,
                              2150,
                              2196,
                              2245,
                              2297,
                              2346,
                              2400,
                              2457,
                              2517,
                              2574,
                              2636,
                              2701,
                              2769,
                              2834,
                              2904,
                              2977,
                              3053,
                              3126,
                              3173,
                              3222,
                              3275,
                              3326,
                              3364,
                              3405,
                              3449,
                              3490,
                              3536,
                              3585,
                              3637,
                              3686,
                              3740,
                              3797,
                              3857,
                              3914,
                              3976,
                              4041,
                              4109,
                              4174,
                              4244,
                              4317,
                              4393,
                              4466
                            ],
                            "referencedDeclaration": 1645,
                            "src": "3334:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3334:357:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3320:371:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 199,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "3706:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 201,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 200,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "3715:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3706:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3722:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3706:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 204,
                        "nodeType": "ExpressionStatement",
                        "src": "3706:20:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 205,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "3741:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$54_storage_$",
                                "typeString": "mapping(bytes32 => struct OracleTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 207,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 206,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "3759:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3741:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                              "typeString": "struct OracleTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 209,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "3783:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$51_$",
                                    "typeString": "type(enum OracleTest.oraclizeState)"
                                  }
                                },
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "random",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3783:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                                  "typeString": "enum OracleTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                                  "typeString": "enum OracleTest.oraclizeState"
                                }
                              ],
                              "id": 208,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "3766:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$54_storage_ptr_$",
                                "typeString": "type(struct OracleTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3766:38:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                              "typeString": "struct OracleTest.oraclizeCallback memory"
                            }
                          },
                          "src": "3741:63:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                            "typeString": "struct OracleTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 213,
                        "nodeType": "ExpressionStatement",
                        "src": "3741:63:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 215,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "3835:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 214,
                            "name": "LogQueryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "3824:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3824:15:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 217,
                        "nodeType": "EmitStatement",
                        "src": "3819:20:1"
                      }
                    ]
                  },
                  "id": 219,
                  "nodeType": "IfStatement",
                  "src": "3019:832:1",
                  "trueBody": {
                    "id": 186,
                    "nodeType": "Block",
                    "src": "3073:130:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3113:77:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Provable query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 182,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3093:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3093:98:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "EmitStatement",
                        "src": "3088:103:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dbdff2c1",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2990:2:1"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3008:0:1"
            },
            "scope": 322,
            "src": "2966:892:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "3906:635:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3939:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 224,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1412,
                          1430
                        ],
                        "referencedDeclaration": 1412,
                        "src": "3921:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3921:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 229,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3956:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OracleTest_$322",
                              "typeString": "contract OracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OracleTest_$322",
                              "typeString": "contract OracleTest"
                            }
                          ],
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3948:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 227,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3948:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3948:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3948:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3921:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 268,
                    "nodeType": "Block",
                    "src": "4107:425:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4147:55:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2065be296ebbccebc46412f7159bc89bcf66eb3460a5e402185360bc8cae0361",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer..\""
                              },
                              "value": "Provable query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2065be296ebbccebc46412f7159bc89bcf66eb3460a5e402185360bc8cae0361",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 238,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "4127:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4127:76:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 241,
                        "nodeType": "EmitStatement",
                        "src": "4122:81:1"
                      },
                      {
                        "assignments": [
                          243
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 243,
                            "mutability": "mutable",
                            "name": "_id",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 268,
                            "src": "4218:11:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 242,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4218:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 248,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4265:5:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e70726f2e636f696e626173652e636f6d2f70726f64756374732f4554482d5553442f7469636b6572292e7072696365",
                              "id": 246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4289:66:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e55baa631f447cda815800145fbb5f2039aa2d2170415b6fb5c678671318580b",
                                "typeString": "literal_string \"json(https://api.pro.coinbase.com/products/ETH-USD/ticker).price\""
                              },
                              "value": "json(https://api.pro.coinbase.com/products/ETH-USD/ticker).price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e55baa631f447cda815800145fbb5f2039aa2d2170415b6fb5c678671318580b",
                                "typeString": "literal_string \"json(https://api.pro.coinbase.com/products/ETH-USD/ticker).price\""
                              }
                            ],
                            "id": 244,
                            "name": "provable_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1470,
                              1512,
                              1558,
                              1602,
                              1645,
                              1690,
                              1739,
                              1786,
                              1833,
                              1882,
                              1935,
                              1986,
                              2024,
                              2065,
                              2109,
                              2150,
                              2196,
                              2245,
                              2297,
                              2346,
                              2400,
                              2457,
                              2517,
                              2574,
                              2636,
                              2701,
                              2769,
                              2834,
                              2904,
                              2977,
                              3053,
                              3126,
                              3173,
                              3222,
                              3275,
                              3326,
                              3364,
                              3405,
                              3449,
                              3490,
                              3536,
                              3585,
                              3637,
                              3686,
                              3740,
                              3797,
                              3857,
                              3914,
                              3976,
                              4041,
                              4109,
                              4174,
                              4244,
                              4317,
                              4393,
                              4466
                            ],
                            "referencedDeclaration": 1470,
                            "src": "4232:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4232:138:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4218:152:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 249,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "4385:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 251,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 250,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "4394:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4385:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4401:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4385:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 254,
                        "nodeType": "ExpressionStatement",
                        "src": "4385:20:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 255,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "4420:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$54_storage_$",
                                "typeString": "mapping(bytes32 => struct OracleTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 257,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 256,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "4438:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4420:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                              "typeString": "struct OracleTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 259,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "4462:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$51_$",
                                    "typeString": "type(enum OracleTest.oraclizeState)"
                                  }
                                },
                                "id": 260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ethprice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4462:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                                  "typeString": "enum OracleTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                                  "typeString": "enum OracleTest.oraclizeState"
                                }
                              ],
                              "id": 258,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "4445:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$54_storage_ptr_$",
                                "typeString": "type(struct OracleTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4445:40:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                              "typeString": "struct OracleTest.oraclizeCallback memory"
                            }
                          },
                          "src": "4420:65:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                            "typeString": "struct OracleTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 263,
                        "nodeType": "ExpressionStatement",
                        "src": "4420:65:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 265,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "4516:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 264,
                            "name": "LogQueryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "4505:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4505:15:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 267,
                        "nodeType": "EmitStatement",
                        "src": "4500:20:1"
                      }
                    ]
                  },
                  "id": 269,
                  "nodeType": "IfStatement",
                  "src": "3917:615:1",
                  "trueBody": {
                    "id": 237,
                    "nodeType": "Block",
                    "src": "3971:130:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4011:77:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Provable query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 233,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3991:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3991:98:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 236,
                        "nodeType": "EmitStatement",
                        "src": "3986:103:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "67c9b017",
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3888:2:1"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3906:0:1"
            },
            "scope": 322,
            "src": "3868:673:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "4587:635:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4620:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 274,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1412,
                          1430
                        ],
                        "referencedDeclaration": 1412,
                        "src": "4602:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4602:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 279,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4637:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OracleTest_$322",
                              "typeString": "contract OracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OracleTest_$322",
                              "typeString": "contract OracleTest"
                            }
                          ],
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4629:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 277,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4629:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4629:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4629:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4602:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 318,
                    "nodeType": "Block",
                    "src": "4788:425:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4828:55:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2065be296ebbccebc46412f7159bc89bcf66eb3460a5e402185360bc8cae0361",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer..\""
                              },
                              "value": "Provable query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2065be296ebbccebc46412f7159bc89bcf66eb3460a5e402185360bc8cae0361",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 288,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "4808:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4808:76:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 291,
                        "nodeType": "EmitStatement",
                        "src": "4803:81:1"
                      },
                      {
                        "assignments": [
                          293
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 293,
                            "mutability": "mutable",
                            "name": "_id",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 318,
                            "src": "4899:11:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 292,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4899:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 298,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4946:5:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e70726f2e636f696e626173652e636f6d2f70726f64756374732f4254432d5553442f7469636b6572292e7072696365",
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4970:66:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7f39437c861025fe0bac7e3f737f0d5f4f367caa7c7a12ff4d7be67d2def7360",
                                "typeString": "literal_string \"json(https://api.pro.coinbase.com/products/BTC-USD/ticker).price\""
                              },
                              "value": "json(https://api.pro.coinbase.com/products/BTC-USD/ticker).price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7f39437c861025fe0bac7e3f737f0d5f4f367caa7c7a12ff4d7be67d2def7360",
                                "typeString": "literal_string \"json(https://api.pro.coinbase.com/products/BTC-USD/ticker).price\""
                              }
                            ],
                            "id": 294,
                            "name": "provable_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1470,
                              1512,
                              1558,
                              1602,
                              1645,
                              1690,
                              1739,
                              1786,
                              1833,
                              1882,
                              1935,
                              1986,
                              2024,
                              2065,
                              2109,
                              2150,
                              2196,
                              2245,
                              2297,
                              2346,
                              2400,
                              2457,
                              2517,
                              2574,
                              2636,
                              2701,
                              2769,
                              2834,
                              2904,
                              2977,
                              3053,
                              3126,
                              3173,
                              3222,
                              3275,
                              3326,
                              3364,
                              3405,
                              3449,
                              3490,
                              3536,
                              3585,
                              3637,
                              3686,
                              3740,
                              3797,
                              3857,
                              3914,
                              3976,
                              4041,
                              4109,
                              4174,
                              4244,
                              4317,
                              4393,
                              4466
                            ],
                            "referencedDeclaration": 1470,
                            "src": "4913:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4913:138:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4899:152:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 299,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "5066:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 301,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 300,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "5075:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5066:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5082:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5066:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 304,
                        "nodeType": "ExpressionStatement",
                        "src": "5066:20:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 305,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "5101:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$54_storage_$",
                                "typeString": "mapping(bytes32 => struct OracleTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 307,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 306,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "5119:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5101:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                              "typeString": "struct OracleTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 309,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "5143:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$51_$",
                                    "typeString": "type(enum OracleTest.oraclizeState)"
                                  }
                                },
                                "id": 310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "btcprice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5143:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                                  "typeString": "enum OracleTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$51",
                                  "typeString": "enum OracleTest.oraclizeState"
                                }
                              ],
                              "id": 308,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "5126:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$54_storage_ptr_$",
                                "typeString": "type(struct OracleTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5126:40:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$54_memory_ptr",
                              "typeString": "struct OracleTest.oraclizeCallback memory"
                            }
                          },
                          "src": "5101:65:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$54_storage",
                            "typeString": "struct OracleTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 313,
                        "nodeType": "ExpressionStatement",
                        "src": "5101:65:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 315,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "5197:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 314,
                            "name": "LogQueryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "5186:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5186:15:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 317,
                        "nodeType": "EmitStatement",
                        "src": "5181:20:1"
                      }
                    ]
                  },
                  "id": 319,
                  "nodeType": "IfStatement",
                  "src": "4598:615:1",
                  "trueBody": {
                    "id": 287,
                    "nodeType": "Block",
                    "src": "4652:130:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4692:77:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Provable query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 283,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "4672:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4672:98:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 286,
                        "nodeType": "EmitStatement",
                        "src": "4667:103:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3a3610bc",
            "id": 321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4569:2:1"
            },
            "returnParameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4587:0:1"
            },
            "scope": 322,
            "src": "4549:673:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 323,
        "src": "71:5156:1"
      }
    ],
    "src": "0:5227:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x11a3fca63f87bd67d7f9f72b744acc8be2193705e7a734ac3a773d35d259e87b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "name": "LogConstructorInitiated",
          "type": "event"
        },
        "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "name": "LogNewProvableQuery",
          "type": "event"
        },
        "0xba5c08e7ca16d504b0119b4b9e09b27a571d73bf338d327cfbbe54b0b55ff88d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "queryID",
              "type": "bytes32"
            }
          ],
          "name": "LogQueryId",
          "type": "event"
        },
        "0x5e25508efc8698254ccf9e26c5073dae41053408702c13119d26bacd46cab530": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "name": "LogCallbackResult",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1F7ac3cE9B79F6B0c10968Cb3d7a5A680d335f27",
      "transactionHash": "0xbb3942e188e30696d23ca81254e84296898eb9289adc305b17035adfad4c0426"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-05-01T07:12:29.591Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}